/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.*;
import com.gremlin.api.ApiGremlinException;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.gremlin.api.model.NewRequestRequest;
import com.gremlin.api.model.OutstandingRequests;
import com.gremlin.api.model.SharableAssets;
import com.gremlin.api.model.SharedAsset;
import com.gremlin.api.model.SharedAssetUpdate;
import com.gremlin.api.model.UpdateAllRequests;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SharedAssetsApi {
    private ApiGremlinClient apiGremlinClient;

    public SharedAssetsApi() {
        this(Configuration.getDefaultApiGremlinClient());
    }

    public SharedAssetsApi(ApiGremlinClient apiGremlinClient) {
        this.apiGremlinClient = apiGremlinClient;
    }

    public ApiGremlinClient getApiGremlinClient() {
        return apiGremlinClient;
    }

    public void setApiGremlinClient(ApiGremlinClient apiGremlinClient) {
        this.apiGremlinClient = apiGremlinClient;
    }

    /**
     * Build call for approveAccess
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call approveAccessCall(String requestId, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/{requestId}/approve"
            .replaceAll("\\{" + "requestId" + "\\}", apiGremlinClient.escapeString(requestId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (teamId != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("teamId", teamId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "GremlinapiKey" };
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call approveAccessValidateBeforeCall(String requestId, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        
        // verify the required parameter 'requestId' is set
        if (requestId == null) {
            throw new ApiGremlinException("Missing the required parameter 'requestId' when calling approveAccess(Async)");
        }
        

        com.squareup.okhttp.Call call = approveAccessCall(requestId, teamId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Approves a sharing request to a resource you own
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return SharedAsset
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAsset approveAccess(String requestId, Object teamId) throws ApiGremlinException {
        ApiResponse<SharedAsset> resp = approveAccessWithHttpInfo(requestId, teamId);
        return resp.getData();
    }

    /**
     * Approves a sharing request to a resource you own
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return ApiResponse&lt;SharedAsset&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAsset> approveAccessWithHttpInfo(String requestId, Object teamId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = approveAccessValidateBeforeCall(requestId, teamId, null, null);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     * Approves a sharing request to a resource you own (asynchronously)
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call approveAccessAsync(String requestId, Object teamId, final ApiCallback<SharedAsset> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = approveAccessValidateBeforeCall(requestId, teamId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for approveAccessRequests
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call approveAccessRequestsCall(UpdateAllRequests body, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/approve";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (teamId != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("teamId", teamId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "GremlinapiKey" };
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call approveAccessRequestsValidateBeforeCall(UpdateAllRequests body, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = approveAccessRequestsCall(body, teamId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return SharedAssetUpdate
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAssetUpdate approveAccessRequests(UpdateAllRequests body, Object teamId) throws ApiGremlinException {
        ApiResponse<SharedAssetUpdate> resp = approveAccessRequestsWithHttpInfo(body, teamId);
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return ApiResponse&lt;SharedAssetUpdate&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAssetUpdate> approveAccessRequestsWithHttpInfo(UpdateAllRequests body, Object teamId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = approveAccessRequestsValidateBeforeCall(body, teamId, null, null);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call approveAccessRequestsAsync(UpdateAllRequests body, Object teamId, final ApiCallback<SharedAssetUpdate> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = approveAccessRequestsValidateBeforeCall(body, teamId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteRequest
     * @param requestId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteRequestCall(String requestId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/{requestId}"
            .replaceAll("\\{" + "requestId" + "\\}", apiGremlinClient.escapeString(requestId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"GremlinapiKey"  };
        return apiGremlinClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteRequestValidateBeforeCall(String requestId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        
        // verify the required parameter 'requestId' is set
        if (requestId == null) {
            throw new ApiGremlinException("Missing the required parameter 'requestId' when calling deleteRequest(Async)");
        }
        

        com.squareup.okhttp.Call call = deleteRequestCall(requestId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Deletes an existing request for Access
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @return SharedAsset
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAsset deleteRequest(String requestId) throws ApiGremlinException {
        ApiResponse<SharedAsset> resp = deleteRequestWithHttpInfo(requestId);
        return resp.getData();
    }

    /**
     * Deletes an existing request for Access
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @return ApiResponse&lt;SharedAsset&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAsset> deleteRequestWithHttpInfo(String requestId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = deleteRequestValidateBeforeCall(requestId, null, null);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     * Deletes an existing request for Access (asynchronously)
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteRequestAsync(String requestId, final ApiCallback<SharedAsset> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteRequestValidateBeforeCall(requestId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for denyAccess
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call denyAccessCall(String requestId, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/{requestId}/deny"
            .replaceAll("\\{" + "requestId" + "\\}", apiGremlinClient.escapeString(requestId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (teamId != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("teamId", teamId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  "GremlinapiKey"};
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call denyAccessValidateBeforeCall(String requestId, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        
        // verify the required parameter 'requestId' is set
        if (requestId == null) {
            throw new ApiGremlinException("Missing the required parameter 'requestId' when calling denyAccess(Async)");
        }
        

        com.squareup.okhttp.Call call = denyAccessCall(requestId, teamId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Denies or Revokes a sharing request to a resource you own
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return SharedAsset
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAsset denyAccess(String requestId, Object teamId) throws ApiGremlinException {
        ApiResponse<SharedAsset> resp = denyAccessWithHttpInfo(requestId, teamId);
        return resp.getData();
    }

    /**
     * Denies or Revokes a sharing request to a resource you own
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return ApiResponse&lt;SharedAsset&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAsset> denyAccessWithHttpInfo(String requestId, Object teamId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = denyAccessValidateBeforeCall(requestId, teamId, null, null);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     * Denies or Revokes a sharing request to a resource you own (asynchronously)
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call denyAccessAsync(String requestId, Object teamId, final ApiCallback<SharedAsset> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = denyAccessValidateBeforeCall(requestId, teamId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for denyAccessRequests
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call denyAccessRequestsCall(UpdateAllRequests body, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/deny";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (teamId != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("teamId", teamId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "GremlinapiKey" };
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call denyAccessRequestsValidateBeforeCall(UpdateAllRequests body, Object teamId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = denyAccessRequestsCall(body, teamId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return SharedAssetUpdate
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAssetUpdate denyAccessRequests(UpdateAllRequests body, Object teamId) throws ApiGremlinException {
        ApiResponse<SharedAssetUpdate> resp = denyAccessRequestsWithHttpInfo(body, teamId);
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @return ApiResponse&lt;SharedAssetUpdate&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAssetUpdate> denyAccessRequestsWithHttpInfo(UpdateAllRequests body, Object teamId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = denyAccessRequestsValidateBeforeCall(body, teamId, null, null);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param teamId Required when using company session token (RBAC only). (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call denyAccessRequestsAsync(UpdateAllRequests body, Object teamId, final ApiCallback<SharedAssetUpdate> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = denyAccessRequestsValidateBeforeCall(body, teamId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for listAssetsSharedWithMe
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call listAssetsSharedWithMeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/withMe";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"GremlinapiKey"  };
        return apiGremlinClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call listAssetsSharedWithMeValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = listAssetsSharedWithMeCall(progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @return SharedAssetUpdate
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAssetUpdate listAssetsSharedWithMe() throws ApiGremlinException {
        ApiResponse<SharedAssetUpdate> resp = listAssetsSharedWithMeWithHttpInfo();
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @return ApiResponse&lt;SharedAssetUpdate&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAssetUpdate> listAssetsSharedWithMeWithHttpInfo() throws ApiGremlinException {
        com.squareup.okhttp.Call call = listAssetsSharedWithMeValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call listAssetsSharedWithMeAsync(final ApiCallback<SharedAssetUpdate> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = listAssetsSharedWithMeValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for listAvailableAssets
     * @param assetId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call listAvailableAssetsCall(String assetId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (assetId != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("assetId", assetId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"GremlinapiKey"  };
        return apiGremlinClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call listAvailableAssetsValidateBeforeCall(String assetId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = listAvailableAssetsCall(assetId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param assetId  (optional)
     * @return SharableAssets
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharableAssets listAvailableAssets(String assetId) throws ApiGremlinException {
        ApiResponse<SharableAssets> resp = listAvailableAssetsWithHttpInfo(assetId);
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param assetId  (optional)
     * @return ApiResponse&lt;SharableAssets&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharableAssets> listAvailableAssetsWithHttpInfo(String assetId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = listAvailableAssetsValidateBeforeCall(assetId, null, null);
        Type localVarReturnType = new TypeToken<SharableAssets>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param assetId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call listAvailableAssetsAsync(String assetId, final ApiCallback<SharableAssets> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = listAvailableAssetsValidateBeforeCall(assetId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharableAssets>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for listMyRequests
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call listMyRequestsCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "GremlinapiKey" };
        return apiGremlinClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call listMyRequestsValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = listMyRequestsCall(progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @return OutstandingRequests
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OutstandingRequests listMyRequests() throws ApiGremlinException {
        ApiResponse<OutstandingRequests> resp = listMyRequestsWithHttpInfo();
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @return ApiResponse&lt;OutstandingRequests&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OutstandingRequests> listMyRequestsWithHttpInfo() throws ApiGremlinException {
        com.squareup.okhttp.Call call = listMyRequestsValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<OutstandingRequests>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call listMyRequestsAsync(final ApiCallback<OutstandingRequests> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = listMyRequestsValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OutstandingRequests>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for listRequestsToMe
     * @param assetId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call listRequestsToMeCall(String assetId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/toMe";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (assetId != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("assetId", assetId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  "GremlinapiKey"};
        return apiGremlinClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call listRequestsToMeValidateBeforeCall(String assetId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = listRequestsToMeCall(assetId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param assetId  (optional)
     * @return OutstandingRequests
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OutstandingRequests listRequestsToMe(String assetId) throws ApiGremlinException {
        ApiResponse<OutstandingRequests> resp = listRequestsToMeWithHttpInfo(assetId);
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param assetId  (optional)
     * @return ApiResponse&lt;OutstandingRequests&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OutstandingRequests> listRequestsToMeWithHttpInfo(String assetId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = listRequestsToMeValidateBeforeCall(assetId, null, null);
        Type localVarReturnType = new TypeToken<OutstandingRequests>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param assetId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call listRequestsToMeAsync(String assetId, final ApiCallback<OutstandingRequests> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = listRequestsToMeValidateBeforeCall(assetId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OutstandingRequests>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for postDeleteRequest
     * @param requestId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call postDeleteRequestCall(String requestId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests/{requestId}/delete"
            .replaceAll("\\{" + "requestId" + "\\}", apiGremlinClient.escapeString(requestId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"GremlinapiKey"  };
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call postDeleteRequestValidateBeforeCall(String requestId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        
        // verify the required parameter 'requestId' is set
        if (requestId == null) {
            throw new ApiGremlinException("Missing the required parameter 'requestId' when calling postDeleteRequest(Async)");
        }
        

        com.squareup.okhttp.Call call = postDeleteRequestCall(requestId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Deletes an existing request for Access
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @return SharedAsset
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAsset postDeleteRequest(String requestId) throws ApiGremlinException {
        ApiResponse<SharedAsset> resp = postDeleteRequestWithHttpInfo(requestId);
        return resp.getData();
    }

    /**
     * Deletes an existing request for Access
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @return ApiResponse&lt;SharedAsset&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAsset> postDeleteRequestWithHttpInfo(String requestId) throws ApiGremlinException {
        com.squareup.okhttp.Call call = postDeleteRequestValidateBeforeCall(requestId, null, null);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     * Deletes an existing request for Access (asynchronously)
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param requestId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call postDeleteRequestAsync(String requestId, final ApiCallback<SharedAsset> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = postDeleteRequestValidateBeforeCall(requestId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for requestAccess
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call requestAccessCall(NewRequestRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/sharedAssets/requests";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"GremlinapiKey"  };
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call requestAccessValidateBeforeCall(NewRequestRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        

        com.squareup.okhttp.Call call = requestAccessCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @return SharedAssetUpdate
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAssetUpdate requestAccess(NewRequestRequest body) throws ApiGremlinException {
        ApiResponse<SharedAssetUpdate> resp = requestAccessWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @return ApiResponse&lt;SharedAssetUpdate&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAssetUpdate> requestAccessWithHttpInfo(NewRequestRequest body) throws ApiGremlinException {
        com.squareup.okhttp.Call call = requestAccessValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call requestAccessAsync(NewRequestRequest body, final ApiCallback<SharedAssetUpdate> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = requestAccessValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAssetUpdate>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for requestAccessToAsset
     * @param owningTeam  (required)
     * @param assetId  (required)
     * @param namespace  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call requestAccessToAssetCall(String owningTeam, String assetId, String namespace, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sharedAssets/{owningTeam}/{assetId}"
            .replaceAll("\\{" + "owningTeam" + "\\}", apiGremlinClient.escapeString(owningTeam.toString()))
            .replaceAll("\\{" + "assetId" + "\\}", apiGremlinClient.escapeString(assetId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (namespace != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("namespace", namespace));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "GremlinapiKey"};
        return apiGremlinClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call requestAccessToAssetValidateBeforeCall(String owningTeam, String assetId, String namespace, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        
        // verify the required parameter 'owningTeam' is set
        if (owningTeam == null) {
            throw new ApiGremlinException("Missing the required parameter 'owningTeam' when calling requestAccessToAsset(Async)");
        }
        
        // verify the required parameter 'assetId' is set
        if (assetId == null) {
            throw new ApiGremlinException("Missing the required parameter 'assetId' when calling requestAccessToAsset(Async)");
        }
        

        com.squareup.okhttp.Call call = requestAccessToAssetCall(owningTeam, assetId, namespace, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param owningTeam  (required)
     * @param assetId  (required)
     * @param namespace  (optional)
     * @return SharedAsset
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SharedAsset requestAccessToAsset(String owningTeam, String assetId, String namespace) throws ApiGremlinException {
        ApiResponse<SharedAsset> resp = requestAccessToAssetWithHttpInfo(owningTeam, assetId, namespace);
        return resp.getData();
    }

    /**
     * 
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param owningTeam  (required)
     * @param assetId  (required)
     * @param namespace  (optional)
     * @return ApiResponse&lt;SharedAsset&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SharedAsset> requestAccessToAssetWithHttpInfo(String owningTeam, String assetId, String namespace) throws ApiGremlinException {
        com.squareup.okhttp.Call call = requestAccessToAssetValidateBeforeCall(owningTeam, assetId, namespace, null, null);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        return apiGremlinClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param owningTeam  (required)
     * @param assetId  (required)
     * @param namespace  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call requestAccessToAssetAsync(String owningTeam, String assetId, String namespace, final ApiCallback<SharedAsset> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = requestAccessToAssetValidateBeforeCall(owningTeam, assetId, namespace, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SharedAsset>(){}.getType();
        apiGremlinClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
