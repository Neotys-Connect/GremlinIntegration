/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.*;
import com.gremlin.api.ApiGremlinClient;

import java.io.IOException;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportsSecurityApi {
    private ApiGremlinClient apiGremlinClient;

    public ReportsSecurityApi() {
        this(Configuration.getDefaultApiGremlinClient());
    }

    public ReportsSecurityApi(ApiGremlinClient apiGremlinClient) {
        this.apiGremlinClient = apiGremlinClient;
    }

    public ApiGremlinClient getApiGremlinClient() {
        return apiGremlinClient;
    }

    public void setApiGremlinClient(ApiGremlinClient apiGremlinClient) {
        this.apiGremlinClient = apiGremlinClient;
    }

    /**
     * Build call for accessSummary
     * @param start Start date in format &#39;YYYY-MM-DD&#39; (required)
     * @param end End date in format &#39;YYYY-MM-DD&#39; (required)
     * @param format Format of the report (JSON or CSV) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiGremlinException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call accessSummaryCall(String start, String end, String format, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reports/security/access";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (start != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("start", start));
        if (end != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("end", end));
        if (format != null)
        localVarQueryParams.addAll(apiGremlinClient.parameterToPair("format", format));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/plain"
        };
        final String localVarAccept = apiGremlinClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiGremlinClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiGremlinClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "GremlinapiKey" };
        return apiGremlinClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call accessSummaryValidateBeforeCall(String start, String end, String format, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiGremlinException {
        
        // verify the required parameter 'start' is set
        if (start == null) {
            throw new ApiGremlinException("Missing the required parameter 'start' when calling accessSummary(Async)");
        }
        
        // verify the required parameter 'end' is set
        if (end == null) {
            throw new ApiGremlinException("Missing the required parameter 'end' when calling accessSummary(Async)");
        }
        
        // verify the required parameter 'format' is set
        if (format == null) {
            throw new ApiGremlinException("Missing the required parameter 'format' when calling accessSummary(Async)");
        }
        

        com.squareup.okhttp.Call call = accessSummaryCall(start, end, format, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Loads the Access Summary for the specified company in the time period requested.
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ACCESS_SECURITY_LOGS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param start Start date in format &#39;YYYY-MM-DD&#39; (required)
     * @param end End date in format &#39;YYYY-MM-DD&#39; (required)
     * @param format Format of the report (JSON or CSV) (required)
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void accessSummary(String start, String end, String format) throws ApiGremlinException {
        accessSummaryWithHttpInfo(start, end, format);
    }

    /**
     * Loads the Access Summary for the specified company in the time period requested.
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ACCESS_SECURITY_LOGS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param start Start date in format &#39;YYYY-MM-DD&#39; (required)
     * @param end End date in format &#39;YYYY-MM-DD&#39; (required)
     * @param format Format of the report (JSON or CSV) (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiGremlinException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> accessSummaryWithHttpInfo(String start, String end, String format) throws ApiGremlinException {
        com.squareup.okhttp.Call call = accessSummaryValidateBeforeCall(start, end, format, null, null);
        return apiGremlinClient.execute(call);
    }

    /**
     * Loads the Access Summary for the specified company in the time period requested. (asynchronously)
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ACCESS_SECURITY_LOGS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     * @param start Start date in format &#39;YYYY-MM-DD&#39; (required)
     * @param end End date in format &#39;YYYY-MM-DD&#39; (required)
     * @param format Format of the report (JSON or CSV) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiGremlinException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call accessSummaryAsync(String start, String end, String format, final ApiCallback<Void> callback) throws ApiGremlinException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = accessSummaryValidateBeforeCall(start, end, format, progressListener, progressRequestListener);
        apiGremlinClient.executeAsync(call, callback);
        return call;
    }
}
