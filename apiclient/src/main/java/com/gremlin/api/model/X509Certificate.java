/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * X509Certificate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class X509Certificate {
  @SerializedName("type")
  private String type = null;

  @SerializedName("subjectX500Principal")
  private X500Principal subjectX500Principal = null;

  @SerializedName("issuerX500Principal")
  private X500Principal issuerX500Principal = null;

  @SerializedName("issuerDN")
  private Principal issuerDN = null;

  @SerializedName("subjectDN")
  private Principal subjectDN = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("notBefore")
  private OffsetDateTime notBefore = null;

  @SerializedName("notAfter")
  private OffsetDateTime notAfter = null;

  @SerializedName("serialNumber")
  private Integer serialNumber = null;

  @SerializedName("tbscertificate")
  private List<byte[]> tbscertificate = null;

  @SerializedName("sigAlgName")
  private String sigAlgName = null;

  @SerializedName("sigAlgOID")
  private String sigAlgOID = null;

  @SerializedName("sigAlgParams")
  private List<byte[]> sigAlgParams = null;

  @SerializedName("issuerUniqueID")
  private List<Boolean> issuerUniqueID = null;

  @SerializedName("subjectUniqueID")
  private List<Boolean> subjectUniqueID = null;

  @SerializedName("keyUsage")
  private List<Boolean> keyUsage = null;

  @SerializedName("extendedKeyUsage")
  private List<String> extendedKeyUsage = null;

  @SerializedName("subjectAlternativeNames")
  private List<List<Object>> subjectAlternativeNames = null;

  @SerializedName("issuerAlternativeNames")
  private List<List<Object>> issuerAlternativeNames = null;

  @SerializedName("signature")
  private List<byte[]> signature = null;

  @SerializedName("basicConstraints")
  private Integer basicConstraints = null;

  @SerializedName("criticalExtensionOIDs")
  private List<String> criticalExtensionOIDs = null;

  @SerializedName("nonCriticalExtensionOIDs")
  private List<String> nonCriticalExtensionOIDs = null;

  @SerializedName("encoded")
  private List<byte[]> encoded = null;

  @SerializedName("publicKey")
  private PublicKey publicKey = null;

  public X509Certificate type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public X509Certificate subjectX500Principal(X500Principal subjectX500Principal) {
    this.subjectX500Principal = subjectX500Principal;
    return this;
  }

   /**
   * Get subjectX500Principal
   * @return subjectX500Principal
  **/
  @ApiModelProperty(value = "")
  public X500Principal getSubjectX500Principal() {
    return subjectX500Principal;
  }

  public void setSubjectX500Principal(X500Principal subjectX500Principal) {
    this.subjectX500Principal = subjectX500Principal;
  }

  public X509Certificate issuerX500Principal(X500Principal issuerX500Principal) {
    this.issuerX500Principal = issuerX500Principal;
    return this;
  }

   /**
   * Get issuerX500Principal
   * @return issuerX500Principal
  **/
  @ApiModelProperty(value = "")
  public X500Principal getIssuerX500Principal() {
    return issuerX500Principal;
  }

  public void setIssuerX500Principal(X500Principal issuerX500Principal) {
    this.issuerX500Principal = issuerX500Principal;
  }

  public X509Certificate issuerDN(Principal issuerDN) {
    this.issuerDN = issuerDN;
    return this;
  }

   /**
   * Get issuerDN
   * @return issuerDN
  **/
  @ApiModelProperty(value = "")
  public Principal getIssuerDN() {
    return issuerDN;
  }

  public void setIssuerDN(Principal issuerDN) {
    this.issuerDN = issuerDN;
  }

  public X509Certificate subjectDN(Principal subjectDN) {
    this.subjectDN = subjectDN;
    return this;
  }

   /**
   * Get subjectDN
   * @return subjectDN
  **/
  @ApiModelProperty(value = "")
  public Principal getSubjectDN() {
    return subjectDN;
  }

  public void setSubjectDN(Principal subjectDN) {
    this.subjectDN = subjectDN;
  }

  public X509Certificate version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public X509Certificate notBefore(OffsetDateTime notBefore) {
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(OffsetDateTime notBefore) {
    this.notBefore = notBefore;
  }

  public X509Certificate notAfter(OffsetDateTime notAfter) {
    this.notAfter = notAfter;
    return this;
  }

   /**
   * Get notAfter
   * @return notAfter
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNotAfter() {
    return notAfter;
  }

  public void setNotAfter(OffsetDateTime notAfter) {
    this.notAfter = notAfter;
  }

  public X509Certificate serialNumber(Integer serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(Integer serialNumber) {
    this.serialNumber = serialNumber;
  }

  public X509Certificate tbscertificate(List<byte[]> tbscertificate) {
    this.tbscertificate = tbscertificate;
    return this;
  }

  public X509Certificate addTbscertificateItem(byte[] tbscertificateItem) {
    if (this.tbscertificate == null) {
      this.tbscertificate = new ArrayList<byte[]>();
    }
    this.tbscertificate.add(tbscertificateItem);
    return this;
  }

   /**
   * Get tbscertificate
   * @return tbscertificate
  **/
  @ApiModelProperty(value = "")
  public List<byte[]> getTbscertificate() {
    return tbscertificate;
  }

  public void setTbscertificate(List<byte[]> tbscertificate) {
    this.tbscertificate = tbscertificate;
  }

  public X509Certificate sigAlgName(String sigAlgName) {
    this.sigAlgName = sigAlgName;
    return this;
  }

   /**
   * Get sigAlgName
   * @return sigAlgName
  **/
  @ApiModelProperty(value = "")
  public String getSigAlgName() {
    return sigAlgName;
  }

  public void setSigAlgName(String sigAlgName) {
    this.sigAlgName = sigAlgName;
  }

  public X509Certificate sigAlgOID(String sigAlgOID) {
    this.sigAlgOID = sigAlgOID;
    return this;
  }

   /**
   * Get sigAlgOID
   * @return sigAlgOID
  **/
  @ApiModelProperty(value = "")
  public String getSigAlgOID() {
    return sigAlgOID;
  }

  public void setSigAlgOID(String sigAlgOID) {
    this.sigAlgOID = sigAlgOID;
  }

  public X509Certificate sigAlgParams(List<byte[]> sigAlgParams) {
    this.sigAlgParams = sigAlgParams;
    return this;
  }

  public X509Certificate addSigAlgParamsItem(byte[] sigAlgParamsItem) {
    if (this.sigAlgParams == null) {
      this.sigAlgParams = new ArrayList<byte[]>();
    }
    this.sigAlgParams.add(sigAlgParamsItem);
    return this;
  }

   /**
   * Get sigAlgParams
   * @return sigAlgParams
  **/
  @ApiModelProperty(value = "")
  public List<byte[]> getSigAlgParams() {
    return sigAlgParams;
  }

  public void setSigAlgParams(List<byte[]> sigAlgParams) {
    this.sigAlgParams = sigAlgParams;
  }

  public X509Certificate issuerUniqueID(List<Boolean> issuerUniqueID) {
    this.issuerUniqueID = issuerUniqueID;
    return this;
  }

  public X509Certificate addIssuerUniqueIDItem(Boolean issuerUniqueIDItem) {
    if (this.issuerUniqueID == null) {
      this.issuerUniqueID = new ArrayList<Boolean>();
    }
    this.issuerUniqueID.add(issuerUniqueIDItem);
    return this;
  }

   /**
   * Get issuerUniqueID
   * @return issuerUniqueID
  **/
  @ApiModelProperty(value = "")
  public List<Boolean> getIssuerUniqueID() {
    return issuerUniqueID;
  }

  public void setIssuerUniqueID(List<Boolean> issuerUniqueID) {
    this.issuerUniqueID = issuerUniqueID;
  }

  public X509Certificate subjectUniqueID(List<Boolean> subjectUniqueID) {
    this.subjectUniqueID = subjectUniqueID;
    return this;
  }

  public X509Certificate addSubjectUniqueIDItem(Boolean subjectUniqueIDItem) {
    if (this.subjectUniqueID == null) {
      this.subjectUniqueID = new ArrayList<Boolean>();
    }
    this.subjectUniqueID.add(subjectUniqueIDItem);
    return this;
  }

   /**
   * Get subjectUniqueID
   * @return subjectUniqueID
  **/
  @ApiModelProperty(value = "")
  public List<Boolean> getSubjectUniqueID() {
    return subjectUniqueID;
  }

  public void setSubjectUniqueID(List<Boolean> subjectUniqueID) {
    this.subjectUniqueID = subjectUniqueID;
  }

  public X509Certificate keyUsage(List<Boolean> keyUsage) {
    this.keyUsage = keyUsage;
    return this;
  }

  public X509Certificate addKeyUsageItem(Boolean keyUsageItem) {
    if (this.keyUsage == null) {
      this.keyUsage = new ArrayList<Boolean>();
    }
    this.keyUsage.add(keyUsageItem);
    return this;
  }

   /**
   * Get keyUsage
   * @return keyUsage
  **/
  @ApiModelProperty(value = "")
  public List<Boolean> getKeyUsage() {
    return keyUsage;
  }

  public void setKeyUsage(List<Boolean> keyUsage) {
    this.keyUsage = keyUsage;
  }

  public X509Certificate extendedKeyUsage(List<String> extendedKeyUsage) {
    this.extendedKeyUsage = extendedKeyUsage;
    return this;
  }

  public X509Certificate addExtendedKeyUsageItem(String extendedKeyUsageItem) {
    if (this.extendedKeyUsage == null) {
      this.extendedKeyUsage = new ArrayList<String>();
    }
    this.extendedKeyUsage.add(extendedKeyUsageItem);
    return this;
  }

   /**
   * Get extendedKeyUsage
   * @return extendedKeyUsage
  **/
  @ApiModelProperty(value = "")
  public List<String> getExtendedKeyUsage() {
    return extendedKeyUsage;
  }

  public void setExtendedKeyUsage(List<String> extendedKeyUsage) {
    this.extendedKeyUsage = extendedKeyUsage;
  }

  public X509Certificate subjectAlternativeNames(List<List<Object>> subjectAlternativeNames) {
    this.subjectAlternativeNames = subjectAlternativeNames;
    return this;
  }

  public X509Certificate addSubjectAlternativeNamesItem(List<Object> subjectAlternativeNamesItem) {
    if (this.subjectAlternativeNames == null) {
      this.subjectAlternativeNames = new ArrayList<List<Object>>();
    }
    this.subjectAlternativeNames.add(subjectAlternativeNamesItem);
    return this;
  }

   /**
   * Get subjectAlternativeNames
   * @return subjectAlternativeNames
  **/
  @ApiModelProperty(value = "")
  public List<List<Object>> getSubjectAlternativeNames() {
    return subjectAlternativeNames;
  }

  public void setSubjectAlternativeNames(List<List<Object>> subjectAlternativeNames) {
    this.subjectAlternativeNames = subjectAlternativeNames;
  }

  public X509Certificate issuerAlternativeNames(List<List<Object>> issuerAlternativeNames) {
    this.issuerAlternativeNames = issuerAlternativeNames;
    return this;
  }

  public X509Certificate addIssuerAlternativeNamesItem(List<Object> issuerAlternativeNamesItem) {
    if (this.issuerAlternativeNames == null) {
      this.issuerAlternativeNames = new ArrayList<List<Object>>();
    }
    this.issuerAlternativeNames.add(issuerAlternativeNamesItem);
    return this;
  }

   /**
   * Get issuerAlternativeNames
   * @return issuerAlternativeNames
  **/
  @ApiModelProperty(value = "")
  public List<List<Object>> getIssuerAlternativeNames() {
    return issuerAlternativeNames;
  }

  public void setIssuerAlternativeNames(List<List<Object>> issuerAlternativeNames) {
    this.issuerAlternativeNames = issuerAlternativeNames;
  }

  public X509Certificate signature(List<byte[]> signature) {
    this.signature = signature;
    return this;
  }

  public X509Certificate addSignatureItem(byte[] signatureItem) {
    if (this.signature == null) {
      this.signature = new ArrayList<byte[]>();
    }
    this.signature.add(signatureItem);
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @ApiModelProperty(value = "")
  public List<byte[]> getSignature() {
    return signature;
  }

  public void setSignature(List<byte[]> signature) {
    this.signature = signature;
  }

  public X509Certificate basicConstraints(Integer basicConstraints) {
    this.basicConstraints = basicConstraints;
    return this;
  }

   /**
   * Get basicConstraints
   * @return basicConstraints
  **/
  @ApiModelProperty(value = "")
  public Integer getBasicConstraints() {
    return basicConstraints;
  }

  public void setBasicConstraints(Integer basicConstraints) {
    this.basicConstraints = basicConstraints;
  }

  public X509Certificate criticalExtensionOIDs(List<String> criticalExtensionOIDs) {
    this.criticalExtensionOIDs = criticalExtensionOIDs;
    return this;
  }

  public X509Certificate addCriticalExtensionOIDsItem(String criticalExtensionOIDsItem) {
    if (this.criticalExtensionOIDs == null) {
      this.criticalExtensionOIDs = new ArrayList<String>();
    }
    this.criticalExtensionOIDs.add(criticalExtensionOIDsItem);
    return this;
  }

   /**
   * Get criticalExtensionOIDs
   * @return criticalExtensionOIDs
  **/
  @ApiModelProperty(value = "")
  public List<String> getCriticalExtensionOIDs() {
    return criticalExtensionOIDs;
  }

  public void setCriticalExtensionOIDs(List<String> criticalExtensionOIDs) {
    this.criticalExtensionOIDs = criticalExtensionOIDs;
  }

  public X509Certificate nonCriticalExtensionOIDs(List<String> nonCriticalExtensionOIDs) {
    this.nonCriticalExtensionOIDs = nonCriticalExtensionOIDs;
    return this;
  }

  public X509Certificate addNonCriticalExtensionOIDsItem(String nonCriticalExtensionOIDsItem) {
    if (this.nonCriticalExtensionOIDs == null) {
      this.nonCriticalExtensionOIDs = new ArrayList<String>();
    }
    this.nonCriticalExtensionOIDs.add(nonCriticalExtensionOIDsItem);
    return this;
  }

   /**
   * Get nonCriticalExtensionOIDs
   * @return nonCriticalExtensionOIDs
  **/
  @ApiModelProperty(value = "")
  public List<String> getNonCriticalExtensionOIDs() {
    return nonCriticalExtensionOIDs;
  }

  public void setNonCriticalExtensionOIDs(List<String> nonCriticalExtensionOIDs) {
    this.nonCriticalExtensionOIDs = nonCriticalExtensionOIDs;
  }

  public X509Certificate encoded(List<byte[]> encoded) {
    this.encoded = encoded;
    return this;
  }

  public X509Certificate addEncodedItem(byte[] encodedItem) {
    if (this.encoded == null) {
      this.encoded = new ArrayList<byte[]>();
    }
    this.encoded.add(encodedItem);
    return this;
  }

   /**
   * Get encoded
   * @return encoded
  **/
  @ApiModelProperty(value = "")
  public List<byte[]> getEncoded() {
    return encoded;
  }

  public void setEncoded(List<byte[]> encoded) {
    this.encoded = encoded;
  }

  public X509Certificate publicKey(PublicKey publicKey) {
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Get publicKey
   * @return publicKey
  **/
  @ApiModelProperty(value = "")
  public PublicKey getPublicKey() {
    return publicKey;
  }

  public void setPublicKey(PublicKey publicKey) {
    this.publicKey = publicKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    X509Certificate x509Certificate = (X509Certificate) o;
    return Objects.equals(this.type, x509Certificate.type) &&
        Objects.equals(this.subjectX500Principal, x509Certificate.subjectX500Principal) &&
        Objects.equals(this.issuerX500Principal, x509Certificate.issuerX500Principal) &&
        Objects.equals(this.issuerDN, x509Certificate.issuerDN) &&
        Objects.equals(this.subjectDN, x509Certificate.subjectDN) &&
        Objects.equals(this.version, x509Certificate.version) &&
        Objects.equals(this.notBefore, x509Certificate.notBefore) &&
        Objects.equals(this.notAfter, x509Certificate.notAfter) &&
        Objects.equals(this.serialNumber, x509Certificate.serialNumber) &&
        Objects.equals(this.tbscertificate, x509Certificate.tbscertificate) &&
        Objects.equals(this.sigAlgName, x509Certificate.sigAlgName) &&
        Objects.equals(this.sigAlgOID, x509Certificate.sigAlgOID) &&
        Objects.equals(this.sigAlgParams, x509Certificate.sigAlgParams) &&
        Objects.equals(this.issuerUniqueID, x509Certificate.issuerUniqueID) &&
        Objects.equals(this.subjectUniqueID, x509Certificate.subjectUniqueID) &&
        Objects.equals(this.keyUsage, x509Certificate.keyUsage) &&
        Objects.equals(this.extendedKeyUsage, x509Certificate.extendedKeyUsage) &&
        Objects.equals(this.subjectAlternativeNames, x509Certificate.subjectAlternativeNames) &&
        Objects.equals(this.issuerAlternativeNames, x509Certificate.issuerAlternativeNames) &&
        Objects.equals(this.signature, x509Certificate.signature) &&
        Objects.equals(this.basicConstraints, x509Certificate.basicConstraints) &&
        Objects.equals(this.criticalExtensionOIDs, x509Certificate.criticalExtensionOIDs) &&
        Objects.equals(this.nonCriticalExtensionOIDs, x509Certificate.nonCriticalExtensionOIDs) &&
        Objects.equals(this.encoded, x509Certificate.encoded) &&
        Objects.equals(this.publicKey, x509Certificate.publicKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, subjectX500Principal, issuerX500Principal, issuerDN, subjectDN, version, notBefore, notAfter, serialNumber, tbscertificate, sigAlgName, sigAlgOID, sigAlgParams, issuerUniqueID, subjectUniqueID, keyUsage, extendedKeyUsage, subjectAlternativeNames, issuerAlternativeNames, signature, basicConstraints, criticalExtensionOIDs, nonCriticalExtensionOIDs, encoded, publicKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class X509Certificate {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    subjectX500Principal: ").append(toIndentedString(subjectX500Principal)).append("\n");
    sb.append("    issuerX500Principal: ").append(toIndentedString(issuerX500Principal)).append("\n");
    sb.append("    issuerDN: ").append(toIndentedString(issuerDN)).append("\n");
    sb.append("    subjectDN: ").append(toIndentedString(subjectDN)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    tbscertificate: ").append(toIndentedString(tbscertificate)).append("\n");
    sb.append("    sigAlgName: ").append(toIndentedString(sigAlgName)).append("\n");
    sb.append("    sigAlgOID: ").append(toIndentedString(sigAlgOID)).append("\n");
    sb.append("    sigAlgParams: ").append(toIndentedString(sigAlgParams)).append("\n");
    sb.append("    issuerUniqueID: ").append(toIndentedString(issuerUniqueID)).append("\n");
    sb.append("    subjectUniqueID: ").append(toIndentedString(subjectUniqueID)).append("\n");
    sb.append("    keyUsage: ").append(toIndentedString(keyUsage)).append("\n");
    sb.append("    extendedKeyUsage: ").append(toIndentedString(extendedKeyUsage)).append("\n");
    sb.append("    subjectAlternativeNames: ").append(toIndentedString(subjectAlternativeNames)).append("\n");
    sb.append("    issuerAlternativeNames: ").append(toIndentedString(issuerAlternativeNames)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    basicConstraints: ").append(toIndentedString(basicConstraints)).append("\n");
    sb.append("    criticalExtensionOIDs: ").append(toIndentedString(criticalExtensionOIDs)).append("\n");
    sb.append("    nonCriticalExtensionOIDs: ").append(toIndentedString(nonCriticalExtensionOIDs)).append("\n");
    sb.append("    encoded: ").append(toIndentedString(encoded)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

