/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * StrategyObject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class StrategyObject {
  @SerializedName("k8sObjects")
  private List<Object> k8sObjects = null;

  @SerializedName("k8sObjectsInternal")
  private List<K8sObjectOnAttack> k8sObjectsInternal = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("percentage")
  private Integer percentage = null;

  public StrategyObject k8sObjects(List<Object> k8sObjects) {
    this.k8sObjects = k8sObjects;
    return this;
  }

  public StrategyObject addK8sObjectsItem(Object k8sObjectsItem) {
    if (this.k8sObjects == null) {
      this.k8sObjects = new ArrayList<Object>();
    }
    this.k8sObjects.add(k8sObjectsItem);
    return this;
  }

   /**
   * Get k8sObjects
   * @return k8sObjects
  **/
  @ApiModelProperty(value = "")
  public List<Object> getK8sObjects() {
    return k8sObjects;
  }

  public void setK8sObjects(List<Object> k8sObjects) {
    this.k8sObjects = k8sObjects;
  }

  public StrategyObject k8sObjectsInternal(List<K8sObjectOnAttack> k8sObjectsInternal) {
    this.k8sObjectsInternal = k8sObjectsInternal;
    return this;
  }

  public StrategyObject addK8sObjectsInternalItem(K8sObjectOnAttack k8sObjectsInternalItem) {
    if (this.k8sObjectsInternal == null) {
      this.k8sObjectsInternal = new ArrayList<K8sObjectOnAttack>();
    }
    this.k8sObjectsInternal.add(k8sObjectsInternalItem);
    return this;
  }

   /**
   * Get k8sObjectsInternal
   * @return k8sObjectsInternal
  **/
  @ApiModelProperty(value = "")
  public List<K8sObjectOnAttack> getK8sObjectsInternal() {
    return k8sObjectsInternal;
  }

  public void setK8sObjectsInternal(List<K8sObjectOnAttack> k8sObjectsInternal) {
    this.k8sObjectsInternal = k8sObjectsInternal;
  }

  public StrategyObject count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @ApiModelProperty(value = "")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public StrategyObject percentage(Integer percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * Get percentage
   * @return percentage
  **/
  @ApiModelProperty(value = "")
  public Integer getPercentage() {
    return percentage;
  }

  public void setPercentage(Integer percentage) {
    this.percentage = percentage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StrategyObject strategyObject = (StrategyObject) o;
    return Objects.equals(this.k8sObjects, strategyObject.k8sObjects) &&
        Objects.equals(this.k8sObjectsInternal, strategyObject.k8sObjectsInternal) &&
        Objects.equals(this.count, strategyObject.count) &&
        Objects.equals(this.percentage, strategyObject.percentage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(k8sObjects, k8sObjectsInternal, count, percentage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StrategyObject {\n");
    
    sb.append("    k8sObjects: ").append(toIndentedString(k8sObjects)).append("\n");
    sb.append("    k8sObjectsInternal: ").append(toIndentedString(k8sObjectsInternal)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

