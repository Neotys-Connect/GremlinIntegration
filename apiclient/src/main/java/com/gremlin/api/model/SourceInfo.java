/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SourceInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class SourceInfo {
  /**
   * Gets or Sets requestSource
   */
  @JsonAdapter(RequestSourceEnum.Adapter.class)
  public enum RequestSourceEnum {
    WEBAPP("WebApp"),
    
    API("Api"),
    
    SCHEDULED("Scheduled"),
    
    MANUAL("Manual"),
    
    SPINNAKER("Spinnaker"),
    
    CONCORD("Concord"),
    
    GREMLINFEEDER("GremlinFeeder"),
    
    GREMLINSDKPYTHON("GremlinSdkPython"),
    
    SCENARIO("Scenario"),
    
    CHAO("Chao"),
    
    WEBSITE("Website");

    private String value;

    RequestSourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RequestSourceEnum fromValue(String text) {
      for (RequestSourceEnum b : RequestSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RequestSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RequestSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RequestSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RequestSourceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("requestSource")
  private RequestSourceEnum requestSource = null;

  /**
   * Gets or Sets detail
   */
  @JsonAdapter(DetailEnum.Adapter.class)
  public enum DetailEnum {
    ONBOARDING("Onboarding");

    private String value;

    DetailEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DetailEnum fromValue(String text) {
      for (DetailEnum b : DetailEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DetailEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DetailEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DetailEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DetailEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("detail")
  private DetailEnum detail = null;

  public SourceInfo requestSource(RequestSourceEnum requestSource) {
    this.requestSource = requestSource;
    return this;
  }

   /**
   * Get requestSource
   * @return requestSource
  **/
  @ApiModelProperty(value = "")
  public RequestSourceEnum getRequestSource() {
    return requestSource;
  }

  public void setRequestSource(RequestSourceEnum requestSource) {
    this.requestSource = requestSource;
  }

  public SourceInfo detail(DetailEnum detail) {
    this.detail = detail;
    return this;
  }

   /**
   * Get detail
   * @return detail
  **/
  @ApiModelProperty(value = "")
  public DetailEnum getDetail() {
    return detail;
  }

  public void setDetail(DetailEnum detail) {
    this.detail = detail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceInfo sourceInfo = (SourceInfo) o;
    return Objects.equals(this.requestSource, sourceInfo.requestSource) &&
        Objects.equals(this.detail, sourceInfo.detail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestSource, detail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceInfo {\n");
    
    sb.append("    requestSource: ").append(toIndentedString(requestSource)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

