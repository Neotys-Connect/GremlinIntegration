/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ApiKeyJson
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class ApiKeyJson {
  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("created_by")
  private String createdBy = null;

  @SerializedName("revoked_by")
  private String revokedBy = null;

  /**
   * The current state this API key is in.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("ACTIVE"),
    
    IDLE("IDLE"),
    
    REVOKED("REVOKED"),
    
    INVITED("INVITED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("org_id")
  private String orgId = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  public ApiKeyJson identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * The identifier of this API key.
   * @return identifier
  **/
  @ApiModelProperty(value = "The identifier of this API key.")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public ApiKeyJson description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description for the API key.
   * @return description
  **/
  @ApiModelProperty(value = "The description for the API key.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ApiKeyJson createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date when this API key was created.
   * @return createdAt
  **/
  @ApiModelProperty(value = "The date when this API key was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ApiKeyJson createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The user who created this API key.
   * @return createdBy
  **/
  @ApiModelProperty(value = "The user who created this API key.")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public ApiKeyJson revokedBy(String revokedBy) {
    this.revokedBy = revokedBy;
    return this;
  }

   /**
   * The user who revoked this API key.
   * @return revokedBy
  **/
  @ApiModelProperty(value = "The user who revoked this API key.")
  public String getRevokedBy() {
    return revokedBy;
  }

  public void setRevokedBy(String revokedBy) {
    this.revokedBy = revokedBy;
  }

  public ApiKeyJson state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * The current state this API key is in.
   * @return state
  **/
  @ApiModelProperty(value = "The current state this API key is in.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public ApiKeyJson value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The API keys value. The core piece that is used for authentication
   * @return value
  **/
  @ApiModelProperty(value = "The API keys value. The core piece that is used for authentication")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ApiKeyJson orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * The identifier of the team this API key is tied to.
   * @return orgId
  **/
  @ApiModelProperty(value = "The identifier of the team this API key is tied to.")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public ApiKeyJson updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date this API key was last updated.
   * @return updatedAt
  **/
  @ApiModelProperty(value = "The date this API key was last updated.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiKeyJson apiKeyJson = (ApiKeyJson) o;
    return Objects.equals(this.identifier, apiKeyJson.identifier) &&
        Objects.equals(this.description, apiKeyJson.description) &&
        Objects.equals(this.createdAt, apiKeyJson.createdAt) &&
        Objects.equals(this.createdBy, apiKeyJson.createdBy) &&
        Objects.equals(this.revokedBy, apiKeyJson.revokedBy) &&
        Objects.equals(this.state, apiKeyJson.state) &&
        Objects.equals(this.value, apiKeyJson.value) &&
        Objects.equals(this.orgId, apiKeyJson.orgId) &&
        Objects.equals(this.updatedAt, apiKeyJson.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, description, createdAt, createdBy, revokedBy, state, value, orgId, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiKeyJson {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    revokedBy: ").append(toIndentedString(revokedBy)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

