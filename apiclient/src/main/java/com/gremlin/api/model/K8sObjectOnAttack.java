/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * K8sObjectOnAttack
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class K8sObjectOnAttack {
  @SerializedName("clusterId")
  private String clusterId = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets kind
   */
  @JsonAdapter(KindEnum.Adapter.class)
  public enum KindEnum {
    DEPLOYMENT("DEPLOYMENT"),
    
    REPLICASET("REPLICASET"),
    
    POD("POD"),
    
    DAEMONSET("DAEMONSET"),
    
    STATEFULSET("STATEFULSET");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KindEnum fromValue(String text) {
      for (KindEnum b : KindEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<KindEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KindEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KindEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return KindEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("kind")
  private KindEnum kind = null;

  @SerializedName("labels")
  private Map<String, String> labels = null;

  @SerializedName("annotations")
  private Map<String, String> annotations = null;

  @SerializedName("ownerReferences")
  private String ownerReferences = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("resolvedContainers")
  private List<String> resolvedContainers = null;

  @SerializedName("data")
  private String data = null;

  @SerializedName("clientId")
  private String clientId = null;

  @SerializedName("attackUid")
  private String attackUid = null;

  @SerializedName("teamId")
  private String teamId = null;

  @SerializedName("resolved")
  private Boolean resolved = null;

  public K8sObjectOnAttack clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @ApiModelProperty(value = "")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public K8sObjectOnAttack uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @ApiModelProperty(value = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public K8sObjectOnAttack namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @ApiModelProperty(value = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public K8sObjectOnAttack name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public K8sObjectOnAttack kind(KindEnum kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @ApiModelProperty(value = "")
  public KindEnum getKind() {
    return kind;
  }

  public void setKind(KindEnum kind) {
    this.kind = kind;
  }

  public K8sObjectOnAttack labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public K8sObjectOnAttack putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<String, String>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }

  public K8sObjectOnAttack annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public K8sObjectOnAttack putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<String, String>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }

  public K8sObjectOnAttack ownerReferences(String ownerReferences) {
    this.ownerReferences = ownerReferences;
    return this;
  }

   /**
   * Get ownerReferences
   * @return ownerReferences
  **/
  @ApiModelProperty(value = "")
  public String getOwnerReferences() {
    return ownerReferences;
  }

  public void setOwnerReferences(String ownerReferences) {
    this.ownerReferences = ownerReferences;
  }

  public K8sObjectOnAttack createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public K8sObjectOnAttack resolvedContainers(List<String> resolvedContainers) {
    this.resolvedContainers = resolvedContainers;
    return this;
  }

  public K8sObjectOnAttack addResolvedContainersItem(String resolvedContainersItem) {
    if (this.resolvedContainers == null) {
      this.resolvedContainers = new ArrayList<String>();
    }
    this.resolvedContainers.add(resolvedContainersItem);
    return this;
  }

   /**
   * Get resolvedContainers
   * @return resolvedContainers
  **/
  @ApiModelProperty(value = "")
  public List<String> getResolvedContainers() {
    return resolvedContainers;
  }

  public void setResolvedContainers(List<String> resolvedContainers) {
    this.resolvedContainers = resolvedContainers;
  }

  public K8sObjectOnAttack data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public K8sObjectOnAttack clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public K8sObjectOnAttack attackUid(String attackUid) {
    this.attackUid = attackUid;
    return this;
  }

   /**
   * Get attackUid
   * @return attackUid
  **/
  @ApiModelProperty(value = "")
  public String getAttackUid() {
    return attackUid;
  }

  public void setAttackUid(String attackUid) {
    this.attackUid = attackUid;
  }

  public K8sObjectOnAttack teamId(String teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @ApiModelProperty(value = "")
  public String getTeamId() {
    return teamId;
  }

  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }

  public K8sObjectOnAttack resolved(Boolean resolved) {
    this.resolved = resolved;
    return this;
  }

   /**
   * Get resolved
   * @return resolved
  **/
  @ApiModelProperty(value = "")
  public Boolean isResolved() {
    return resolved;
  }

  public void setResolved(Boolean resolved) {
    this.resolved = resolved;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    K8sObjectOnAttack k8sObjectOnAttack = (K8sObjectOnAttack) o;
    return Objects.equals(this.clusterId, k8sObjectOnAttack.clusterId) &&
        Objects.equals(this.uid, k8sObjectOnAttack.uid) &&
        Objects.equals(this.namespace, k8sObjectOnAttack.namespace) &&
        Objects.equals(this.name, k8sObjectOnAttack.name) &&
        Objects.equals(this.kind, k8sObjectOnAttack.kind) &&
        Objects.equals(this.labels, k8sObjectOnAttack.labels) &&
        Objects.equals(this.annotations, k8sObjectOnAttack.annotations) &&
        Objects.equals(this.ownerReferences, k8sObjectOnAttack.ownerReferences) &&
        Objects.equals(this.createdAt, k8sObjectOnAttack.createdAt) &&
        Objects.equals(this.resolvedContainers, k8sObjectOnAttack.resolvedContainers) &&
        Objects.equals(this.data, k8sObjectOnAttack.data) &&
        Objects.equals(this.clientId, k8sObjectOnAttack.clientId) &&
        Objects.equals(this.attackUid, k8sObjectOnAttack.attackUid) &&
        Objects.equals(this.teamId, k8sObjectOnAttack.teamId) &&
        Objects.equals(this.resolved, k8sObjectOnAttack.resolved);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterId, uid, namespace, name, kind, labels, annotations, ownerReferences, createdAt, resolvedContainers, data, clientId, attackUid, teamId, resolved);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class K8sObjectOnAttack {\n");
    
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    ownerReferences: ").append(toIndentedString(ownerReferences)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    resolvedContainers: ").append(toIndentedString(resolvedContainers)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    attackUid: ").append(toIndentedString(attackUid)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    resolved: ").append(toIndentedString(resolved)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

