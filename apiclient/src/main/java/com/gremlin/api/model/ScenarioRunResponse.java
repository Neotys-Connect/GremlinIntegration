/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ScenarioRunResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class ScenarioRunResponse {
  @SerializedName("scenarioId")
  private String scenarioId = null;

  @SerializedName("runNumber")
  private Long runNumber = null;

  @SerializedName("org_id")
  private String orgId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("hypothesis")
  private String hypothesis = null;

  @SerializedName("stageInfo")
  private Map<String, Object> stageInfo = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("updatedAt")
  private String updatedAt = null;

  @SerializedName("createSource")
  private String createSource = null;

  @SerializedName("resolvedTargets")
  private List<List<Map<String, Object>>> resolvedTargets = null;

  @SerializedName("stepSummaries")
  private List<Map<String, Object>> stepSummaries = null;

  @SerializedName("graph")
  private ScenarioRunGraph graph = null;

  @SerializedName("resultNotes")
  private String resultNotes = null;

  @SerializedName("resultFlags")
  private Map<String, Boolean> resultFlags = null;

  @SerializedName("results")
  private ScenarioRunResults results = null;

  @SerializedName("scheduleId")
  private String scheduleId = null;

  @SerializedName("scenarioEditCounterAtRunTime")
  private Integer scenarioEditCounterAtRunTime = null;

  public ScenarioRunResponse scenarioId(String scenarioId) {
    this.scenarioId = scenarioId;
    return this;
  }

   /**
   * Get scenarioId
   * @return scenarioId
  **/
  @ApiModelProperty(value = "")
  public String getScenarioId() {
    return scenarioId;
  }

  public void setScenarioId(String scenarioId) {
    this.scenarioId = scenarioId;
  }

  public ScenarioRunResponse runNumber(Long runNumber) {
    this.runNumber = runNumber;
    return this;
  }

   /**
   * Get runNumber
   * @return runNumber
  **/
  @ApiModelProperty(value = "")
  public Long getRunNumber() {
    return runNumber;
  }

  public void setRunNumber(Long runNumber) {
    this.runNumber = runNumber;
  }

  public ScenarioRunResponse orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @ApiModelProperty(value = "")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public ScenarioRunResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ScenarioRunResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ScenarioRunResponse hypothesis(String hypothesis) {
    this.hypothesis = hypothesis;
    return this;
  }

   /**
   * Get hypothesis
   * @return hypothesis
  **/
  @ApiModelProperty(value = "")
  public String getHypothesis() {
    return hypothesis;
  }

  public void setHypothesis(String hypothesis) {
    this.hypothesis = hypothesis;
  }

  public ScenarioRunResponse stageInfo(Map<String, Object> stageInfo) {
    this.stageInfo = stageInfo;
    return this;
  }

  public ScenarioRunResponse putStageInfoItem(String key, Object stageInfoItem) {
    if (this.stageInfo == null) {
      this.stageInfo = new HashMap<String, Object>();
    }
    this.stageInfo.put(key, stageInfoItem);
    return this;
  }

   /**
   * Get stageInfo
   * @return stageInfo
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getStageInfo() {
    return stageInfo;
  }

  public void setStageInfo(Map<String, Object> stageInfo) {
    this.stageInfo = stageInfo;
  }

  public ScenarioRunResponse createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public ScenarioRunResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public ScenarioRunResponse updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ScenarioRunResponse createSource(String createSource) {
    this.createSource = createSource;
    return this;
  }

   /**
   * Get createSource
   * @return createSource
  **/
  @ApiModelProperty(value = "")
  public String getCreateSource() {
    return createSource;
  }

  public void setCreateSource(String createSource) {
    this.createSource = createSource;
  }

  public ScenarioRunResponse resolvedTargets(List<List<Map<String, Object>>> resolvedTargets) {
    this.resolvedTargets = resolvedTargets;
    return this;
  }

  public ScenarioRunResponse addResolvedTargetsItem(List<Map<String, Object>> resolvedTargetsItem) {
    if (this.resolvedTargets == null) {
      this.resolvedTargets = new ArrayList<List<Map<String, Object>>>();
    }
    this.resolvedTargets.add(resolvedTargetsItem);
    return this;
  }

   /**
   * Get resolvedTargets
   * @return resolvedTargets
  **/
  @ApiModelProperty(value = "")
  public List<List<Map<String, Object>>> getResolvedTargets() {
    return resolvedTargets;
  }

  public void setResolvedTargets(List<List<Map<String, Object>>> resolvedTargets) {
    this.resolvedTargets = resolvedTargets;
  }

  public ScenarioRunResponse stepSummaries(List<Map<String, Object>> stepSummaries) {
    this.stepSummaries = stepSummaries;
    return this;
  }

  public ScenarioRunResponse addStepSummariesItem(Map<String, Object> stepSummariesItem) {
    if (this.stepSummaries == null) {
      this.stepSummaries = new ArrayList<Map<String, Object>>();
    }
    this.stepSummaries.add(stepSummariesItem);
    return this;
  }

   /**
   * Get stepSummaries
   * @return stepSummaries
  **/
  @ApiModelProperty(value = "")
  public List<Map<String, Object>> getStepSummaries() {
    return stepSummaries;
  }

  public void setStepSummaries(List<Map<String, Object>> stepSummaries) {
    this.stepSummaries = stepSummaries;
  }

  public ScenarioRunResponse graph(ScenarioRunGraph graph) {
    this.graph = graph;
    return this;
  }

   /**
   * Get graph
   * @return graph
  **/
  @ApiModelProperty(value = "")
  public ScenarioRunGraph getGraph() {
    return graph;
  }

  public void setGraph(ScenarioRunGraph graph) {
    this.graph = graph;
  }

  public ScenarioRunResponse resultNotes(String resultNotes) {
    this.resultNotes = resultNotes;
    return this;
  }

   /**
   * Get resultNotes
   * @return resultNotes
  **/
  @ApiModelProperty(value = "")
  public String getResultNotes() {
    return resultNotes;
  }

  public void setResultNotes(String resultNotes) {
    this.resultNotes = resultNotes;
  }

  public ScenarioRunResponse resultFlags(Map<String, Boolean> resultFlags) {
    this.resultFlags = resultFlags;
    return this;
  }

  public ScenarioRunResponse putResultFlagsItem(String key, Boolean resultFlagsItem) {
    if (this.resultFlags == null) {
      this.resultFlags = new HashMap<String, Boolean>();
    }
    this.resultFlags.put(key, resultFlagsItem);
    return this;
  }

   /**
   * Get resultFlags
   * @return resultFlags
  **/
  @ApiModelProperty(value = "")
  public Map<String, Boolean> getResultFlags() {
    return resultFlags;
  }

  public void setResultFlags(Map<String, Boolean> resultFlags) {
    this.resultFlags = resultFlags;
  }

  public ScenarioRunResponse results(ScenarioRunResults results) {
    this.results = results;
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @ApiModelProperty(value = "")
  public ScenarioRunResults getResults() {
    return results;
  }

  public void setResults(ScenarioRunResults results) {
    this.results = results;
  }

  public ScenarioRunResponse scheduleId(String scheduleId) {
    this.scheduleId = scheduleId;
    return this;
  }

   /**
   * Get scheduleId
   * @return scheduleId
  **/
  @ApiModelProperty(value = "")
  public String getScheduleId() {
    return scheduleId;
  }

  public void setScheduleId(String scheduleId) {
    this.scheduleId = scheduleId;
  }

  public ScenarioRunResponse scenarioEditCounterAtRunTime(Integer scenarioEditCounterAtRunTime) {
    this.scenarioEditCounterAtRunTime = scenarioEditCounterAtRunTime;
    return this;
  }

   /**
   * Get scenarioEditCounterAtRunTime
   * @return scenarioEditCounterAtRunTime
  **/
  @ApiModelProperty(value = "")
  public Integer getScenarioEditCounterAtRunTime() {
    return scenarioEditCounterAtRunTime;
  }

  public void setScenarioEditCounterAtRunTime(Integer scenarioEditCounterAtRunTime) {
    this.scenarioEditCounterAtRunTime = scenarioEditCounterAtRunTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScenarioRunResponse scenarioRunResponse = (ScenarioRunResponse) o;
    return Objects.equals(this.scenarioId, scenarioRunResponse.scenarioId) &&
        Objects.equals(this.runNumber, scenarioRunResponse.runNumber) &&
        Objects.equals(this.orgId, scenarioRunResponse.orgId) &&
        Objects.equals(this.name, scenarioRunResponse.name) &&
        Objects.equals(this.description, scenarioRunResponse.description) &&
        Objects.equals(this.hypothesis, scenarioRunResponse.hypothesis) &&
        Objects.equals(this.stageInfo, scenarioRunResponse.stageInfo) &&
        Objects.equals(this.createdBy, scenarioRunResponse.createdBy) &&
        Objects.equals(this.createdAt, scenarioRunResponse.createdAt) &&
        Objects.equals(this.updatedAt, scenarioRunResponse.updatedAt) &&
        Objects.equals(this.createSource, scenarioRunResponse.createSource) &&
        Objects.equals(this.resolvedTargets, scenarioRunResponse.resolvedTargets) &&
        Objects.equals(this.stepSummaries, scenarioRunResponse.stepSummaries) &&
        Objects.equals(this.graph, scenarioRunResponse.graph) &&
        Objects.equals(this.resultNotes, scenarioRunResponse.resultNotes) &&
        Objects.equals(this.resultFlags, scenarioRunResponse.resultFlags) &&
        Objects.equals(this.results, scenarioRunResponse.results) &&
        Objects.equals(this.scheduleId, scenarioRunResponse.scheduleId) &&
        Objects.equals(this.scenarioEditCounterAtRunTime, scenarioRunResponse.scenarioEditCounterAtRunTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scenarioId, runNumber, orgId, name, description, hypothesis, stageInfo, createdBy, createdAt, updatedAt, createSource, resolvedTargets, stepSummaries, graph, resultNotes, resultFlags, results, scheduleId, scenarioEditCounterAtRunTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScenarioRunResponse {\n");
    
    sb.append("    scenarioId: ").append(toIndentedString(scenarioId)).append("\n");
    sb.append("    runNumber: ").append(toIndentedString(runNumber)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hypothesis: ").append(toIndentedString(hypothesis)).append("\n");
    sb.append("    stageInfo: ").append(toIndentedString(stageInfo)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createSource: ").append(toIndentedString(createSource)).append("\n");
    sb.append("    resolvedTargets: ").append(toIndentedString(resolvedTargets)).append("\n");
    sb.append("    stepSummaries: ").append(toIndentedString(stepSummaries)).append("\n");
    sb.append("    graph: ").append(toIndentedString(graph)).append("\n");
    sb.append("    resultNotes: ").append(toIndentedString(resultNotes)).append("\n");
    sb.append("    resultFlags: ").append(toIndentedString(resultFlags)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    scheduleId: ").append(toIndentedString(scheduleId)).append("\n");
    sb.append("    scenarioEditCounterAtRunTime: ").append(toIndentedString(scenarioEditCounterAtRunTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

