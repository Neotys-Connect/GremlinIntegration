/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * CertificateAndPrivateKey
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class CertificateAndPrivateKey {
  @SerializedName("certificate")
  private X509Certificate certificate = null;

  @SerializedName("privateKey")
  private PrivateKey privateKey = null;

  @SerializedName("pemEncodedCertificate")
  private String pemEncodedCertificate = null;

  @SerializedName("pemEncodedPrivateKey")
  private String pemEncodedPrivateKey = null;

  public CertificateAndPrivateKey certificate(X509Certificate certificate) {
    this.certificate = certificate;
    return this;
  }

   /**
   * Get certificate
   * @return certificate
  **/
  @ApiModelProperty(value = "")
  public X509Certificate getCertificate() {
    return certificate;
  }

  public void setCertificate(X509Certificate certificate) {
    this.certificate = certificate;
  }

  public CertificateAndPrivateKey privateKey(PrivateKey privateKey) {
    this.privateKey = privateKey;
    return this;
  }

   /**
   * Get privateKey
   * @return privateKey
  **/
  @ApiModelProperty(value = "")
  public PrivateKey getPrivateKey() {
    return privateKey;
  }

  public void setPrivateKey(PrivateKey privateKey) {
    this.privateKey = privateKey;
  }

  public CertificateAndPrivateKey pemEncodedCertificate(String pemEncodedCertificate) {
    this.pemEncodedCertificate = pemEncodedCertificate;
    return this;
  }

   /**
   * Get pemEncodedCertificate
   * @return pemEncodedCertificate
  **/
  @ApiModelProperty(value = "")
  public String getPemEncodedCertificate() {
    return pemEncodedCertificate;
  }

  public void setPemEncodedCertificate(String pemEncodedCertificate) {
    this.pemEncodedCertificate = pemEncodedCertificate;
  }

  public CertificateAndPrivateKey pemEncodedPrivateKey(String pemEncodedPrivateKey) {
    this.pemEncodedPrivateKey = pemEncodedPrivateKey;
    return this;
  }

   /**
   * Get pemEncodedPrivateKey
   * @return pemEncodedPrivateKey
  **/
  @ApiModelProperty(value = "")
  public String getPemEncodedPrivateKey() {
    return pemEncodedPrivateKey;
  }

  public void setPemEncodedPrivateKey(String pemEncodedPrivateKey) {
    this.pemEncodedPrivateKey = pemEncodedPrivateKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateAndPrivateKey certificateAndPrivateKey = (CertificateAndPrivateKey) o;
    return Objects.equals(this.certificate, certificateAndPrivateKey.certificate) &&
        Objects.equals(this.privateKey, certificateAndPrivateKey.privateKey) &&
        Objects.equals(this.pemEncodedCertificate, certificateAndPrivateKey.pemEncodedCertificate) &&
        Objects.equals(this.pemEncodedPrivateKey, certificateAndPrivateKey.pemEncodedPrivateKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificate, privateKey, pemEncodedCertificate, pemEncodedPrivateKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateAndPrivateKey {\n");
    
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    pemEncodedCertificate: ").append(toIndentedString(pemEncodedCertificate)).append("\n");
    sb.append("    pemEncodedPrivateKey: ").append(toIndentedString(pemEncodedPrivateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

