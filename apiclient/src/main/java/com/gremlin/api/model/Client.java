/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * Client
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class Client {
  @SerializedName("containers")
  private List<Container> containers = null;

  @SerializedName("osName")
  private String osName = null;

  @SerializedName("osVersion")
  private String osVersion = null;

  @SerializedName("cloud")
  private String cloud = null;

  @SerializedName("serviceOrDefault")
  private String serviceOrDefault = null;

  @SerializedName("containerRuntime")
  private String containerRuntime = null;

  @SerializedName("containerRuntimeVersion")
  private String containerRuntimeVersion = null;

  @SerializedName("kubernetesVersion")
  private String kubernetesVersion = null;

  @SerializedName("osType")
  private String osType = null;

  @SerializedName("dockerVersion")
  private String dockerVersion = null;

  @SerializedName("metricsEnabled")
  private Boolean metricsEnabled = null;

  @SerializedName("containerHash")
  private Integer containerHash = null;

  @SerializedName("service")
  private String service = null;

  @SerializedName("gremlinClientVersion")
  private String gremlinClientVersion = null;

  /**
   * Gets or Sets authType
   */
  @JsonAdapter(AuthTypeEnum.Adapter.class)
  public enum AuthTypeEnum {
    SECRET("SECRET"),
    
    CERTIFICATE("CERTIFICATE");

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthTypeEnum fromValue(String text) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authType")
  private AuthTypeEnum authType = null;

  @SerializedName("proxied")
  private Boolean proxied = null;

  @SerializedName("instanceStartTime")
  private String instanceStartTime = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("id")
  private String id = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    HOST("Host"),
    
    CONTAINER("Container"),
    
    DOCKER("Docker"),
    
    KUBERNETES("Kubernetes");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("labels")
  private Map<String, String> labels = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("ACTIVE"),
    
    IDLE("IDLE"),
    
    REVOKED("REVOKED"),
    
    INVITED("INVITED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("revokedBy")
  private String revokedBy = null;

  @SerializedName("revoked")
  private Boolean revoked = null;

  @SerializedName("idle")
  private Boolean idle = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("attributes")
  private Map<String, Object> attributes = null;

  @SerializedName("orgId")
  private String orgId = null;

  @SerializedName("lastSeen")
  private OffsetDateTime lastSeen = null;

  @SerializedName("lastActiveEmitted")
  private OffsetDateTime lastActiveEmitted = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  public Client containers(List<Container> containers) {
    this.containers = containers;
    return this;
  }

  public Client addContainersItem(Container containersItem) {
    if (this.containers == null) {
      this.containers = new ArrayList<Container>();
    }
    this.containers.add(containersItem);
    return this;
  }

   /**
   * Get containers
   * @return containers
  **/
  @ApiModelProperty(value = "")
  public List<Container> getContainers() {
    return containers;
  }

  public void setContainers(List<Container> containers) {
    this.containers = containers;
  }

  public Client osName(String osName) {
    this.osName = osName;
    return this;
  }

   /**
   * Get osName
   * @return osName
  **/
  @ApiModelProperty(value = "")
  public String getOsName() {
    return osName;
  }

  public void setOsName(String osName) {
    this.osName = osName;
  }

  public Client osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

   /**
   * Get osVersion
   * @return osVersion
  **/
  @ApiModelProperty(value = "")
  public String getOsVersion() {
    return osVersion;
  }

  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }

  public Client cloud(String cloud) {
    this.cloud = cloud;
    return this;
  }

   /**
   * Get cloud
   * @return cloud
  **/
  @ApiModelProperty(value = "")
  public String getCloud() {
    return cloud;
  }

  public void setCloud(String cloud) {
    this.cloud = cloud;
  }

  public Client serviceOrDefault(String serviceOrDefault) {
    this.serviceOrDefault = serviceOrDefault;
    return this;
  }

   /**
   * Get serviceOrDefault
   * @return serviceOrDefault
  **/
  @ApiModelProperty(value = "")
  public String getServiceOrDefault() {
    return serviceOrDefault;
  }

  public void setServiceOrDefault(String serviceOrDefault) {
    this.serviceOrDefault = serviceOrDefault;
  }

  public Client containerRuntime(String containerRuntime) {
    this.containerRuntime = containerRuntime;
    return this;
  }

   /**
   * Get containerRuntime
   * @return containerRuntime
  **/
  @ApiModelProperty(value = "")
  public String getContainerRuntime() {
    return containerRuntime;
  }

  public void setContainerRuntime(String containerRuntime) {
    this.containerRuntime = containerRuntime;
  }

  public Client containerRuntimeVersion(String containerRuntimeVersion) {
    this.containerRuntimeVersion = containerRuntimeVersion;
    return this;
  }

   /**
   * Get containerRuntimeVersion
   * @return containerRuntimeVersion
  **/
  @ApiModelProperty(value = "")
  public String getContainerRuntimeVersion() {
    return containerRuntimeVersion;
  }

  public void setContainerRuntimeVersion(String containerRuntimeVersion) {
    this.containerRuntimeVersion = containerRuntimeVersion;
  }

  public Client kubernetesVersion(String kubernetesVersion) {
    this.kubernetesVersion = kubernetesVersion;
    return this;
  }

   /**
   * Get kubernetesVersion
   * @return kubernetesVersion
  **/
  @ApiModelProperty(value = "")
  public String getKubernetesVersion() {
    return kubernetesVersion;
  }

  public void setKubernetesVersion(String kubernetesVersion) {
    this.kubernetesVersion = kubernetesVersion;
  }

  public Client osType(String osType) {
    this.osType = osType;
    return this;
  }

   /**
   * Get osType
   * @return osType
  **/
  @ApiModelProperty(value = "")
  public String getOsType() {
    return osType;
  }

  public void setOsType(String osType) {
    this.osType = osType;
  }

  public Client dockerVersion(String dockerVersion) {
    this.dockerVersion = dockerVersion;
    return this;
  }

   /**
   * Get dockerVersion
   * @return dockerVersion
  **/
  @ApiModelProperty(value = "")
  public String getDockerVersion() {
    return dockerVersion;
  }

  public void setDockerVersion(String dockerVersion) {
    this.dockerVersion = dockerVersion;
  }

  public Client metricsEnabled(Boolean metricsEnabled) {
    this.metricsEnabled = metricsEnabled;
    return this;
  }

   /**
   * Get metricsEnabled
   * @return metricsEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isMetricsEnabled() {
    return metricsEnabled;
  }

  public void setMetricsEnabled(Boolean metricsEnabled) {
    this.metricsEnabled = metricsEnabled;
  }

  public Client containerHash(Integer containerHash) {
    this.containerHash = containerHash;
    return this;
  }

   /**
   * Get containerHash
   * @return containerHash
  **/
  @ApiModelProperty(value = "")
  public Integer getContainerHash() {
    return containerHash;
  }

  public void setContainerHash(Integer containerHash) {
    this.containerHash = containerHash;
  }

  public Client service(String service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @ApiModelProperty(value = "")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public Client gremlinClientVersion(String gremlinClientVersion) {
    this.gremlinClientVersion = gremlinClientVersion;
    return this;
  }

   /**
   * Get gremlinClientVersion
   * @return gremlinClientVersion
  **/
  @ApiModelProperty(value = "")
  public String getGremlinClientVersion() {
    return gremlinClientVersion;
  }

  public void setGremlinClientVersion(String gremlinClientVersion) {
    this.gremlinClientVersion = gremlinClientVersion;
  }

  public Client authType(AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

   /**
   * Get authType
   * @return authType
  **/
  @ApiModelProperty(value = "")
  public AuthTypeEnum getAuthType() {
    return authType;
  }

  public void setAuthType(AuthTypeEnum authType) {
    this.authType = authType;
  }

  public Client proxied(Boolean proxied) {
    this.proxied = proxied;
    return this;
  }

   /**
   * Get proxied
   * @return proxied
  **/
  @ApiModelProperty(value = "")
  public Boolean isProxied() {
    return proxied;
  }

  public void setProxied(Boolean proxied) {
    this.proxied = proxied;
  }

  public Client instanceStartTime(String instanceStartTime) {
    this.instanceStartTime = instanceStartTime;
    return this;
  }

   /**
   * Get instanceStartTime
   * @return instanceStartTime
  **/
  @ApiModelProperty(value = "")
  public String getInstanceStartTime() {
    return instanceStartTime;
  }

  public void setInstanceStartTime(String instanceStartTime) {
    this.instanceStartTime = instanceStartTime;
  }

  public Client tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public Client putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public Client id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Client type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Client labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public Client putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<String, String>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }

  public Client state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public Client active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public Client revokedBy(String revokedBy) {
    this.revokedBy = revokedBy;
    return this;
  }

   /**
   * Get revokedBy
   * @return revokedBy
  **/
  @ApiModelProperty(value = "")
  public String getRevokedBy() {
    return revokedBy;
  }

  public void setRevokedBy(String revokedBy) {
    this.revokedBy = revokedBy;
  }

  public Client revoked(Boolean revoked) {
    this.revoked = revoked;
    return this;
  }

   /**
   * Get revoked
   * @return revoked
  **/
  @ApiModelProperty(value = "")
  public Boolean isRevoked() {
    return revoked;
  }

  public void setRevoked(Boolean revoked) {
    this.revoked = revoked;
  }

  public Client idle(Boolean idle) {
    this.idle = idle;
    return this;
  }

   /**
   * Get idle
   * @return idle
  **/
  @ApiModelProperty(value = "")
  public Boolean isIdle() {
    return idle;
  }

  public void setIdle(Boolean idle) {
    this.idle = idle;
  }

  public Client identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public Client attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Client putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, Object>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }

  public Client orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @ApiModelProperty(value = "")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public Client lastSeen(OffsetDateTime lastSeen) {
    this.lastSeen = lastSeen;
    return this;
  }

   /**
   * Get lastSeen
   * @return lastSeen
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastSeen() {
    return lastSeen;
  }

  public void setLastSeen(OffsetDateTime lastSeen) {
    this.lastSeen = lastSeen;
  }

  public Client lastActiveEmitted(OffsetDateTime lastActiveEmitted) {
    this.lastActiveEmitted = lastActiveEmitted;
    return this;
  }

   /**
   * Get lastActiveEmitted
   * @return lastActiveEmitted
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastActiveEmitted() {
    return lastActiveEmitted;
  }

  public void setLastActiveEmitted(OffsetDateTime lastActiveEmitted) {
    this.lastActiveEmitted = lastActiveEmitted;
  }

  public Client createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Client updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Client client = (Client) o;
    return Objects.equals(this.containers, client.containers) &&
        Objects.equals(this.osName, client.osName) &&
        Objects.equals(this.osVersion, client.osVersion) &&
        Objects.equals(this.cloud, client.cloud) &&
        Objects.equals(this.serviceOrDefault, client.serviceOrDefault) &&
        Objects.equals(this.containerRuntime, client.containerRuntime) &&
        Objects.equals(this.containerRuntimeVersion, client.containerRuntimeVersion) &&
        Objects.equals(this.kubernetesVersion, client.kubernetesVersion) &&
        Objects.equals(this.osType, client.osType) &&
        Objects.equals(this.dockerVersion, client.dockerVersion) &&
        Objects.equals(this.metricsEnabled, client.metricsEnabled) &&
        Objects.equals(this.containerHash, client.containerHash) &&
        Objects.equals(this.service, client.service) &&
        Objects.equals(this.gremlinClientVersion, client.gremlinClientVersion) &&
        Objects.equals(this.authType, client.authType) &&
        Objects.equals(this.proxied, client.proxied) &&
        Objects.equals(this.instanceStartTime, client.instanceStartTime) &&
        Objects.equals(this.tags, client.tags) &&
        Objects.equals(this.id, client.id) &&
        Objects.equals(this.type, client.type) &&
        Objects.equals(this.labels, client.labels) &&
        Objects.equals(this.state, client.state) &&
        Objects.equals(this.active, client.active) &&
        Objects.equals(this.revokedBy, client.revokedBy) &&
        Objects.equals(this.revoked, client.revoked) &&
        Objects.equals(this.idle, client.idle) &&
        Objects.equals(this.identifier, client.identifier) &&
        Objects.equals(this.attributes, client.attributes) &&
        Objects.equals(this.orgId, client.orgId) &&
        Objects.equals(this.lastSeen, client.lastSeen) &&
        Objects.equals(this.lastActiveEmitted, client.lastActiveEmitted) &&
        Objects.equals(this.createdAt, client.createdAt) &&
        Objects.equals(this.updatedAt, client.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containers, osName, osVersion, cloud, serviceOrDefault, containerRuntime, containerRuntimeVersion, kubernetesVersion, osType, dockerVersion, metricsEnabled, containerHash, service, gremlinClientVersion, authType, proxied, instanceStartTime, tags, id, type, labels, state, active, revokedBy, revoked, idle, identifier, attributes, orgId, lastSeen, lastActiveEmitted, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Client {\n");
    
    sb.append("    containers: ").append(toIndentedString(containers)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    cloud: ").append(toIndentedString(cloud)).append("\n");
    sb.append("    serviceOrDefault: ").append(toIndentedString(serviceOrDefault)).append("\n");
    sb.append("    containerRuntime: ").append(toIndentedString(containerRuntime)).append("\n");
    sb.append("    containerRuntimeVersion: ").append(toIndentedString(containerRuntimeVersion)).append("\n");
    sb.append("    kubernetesVersion: ").append(toIndentedString(kubernetesVersion)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    dockerVersion: ").append(toIndentedString(dockerVersion)).append("\n");
    sb.append("    metricsEnabled: ").append(toIndentedString(metricsEnabled)).append("\n");
    sb.append("    containerHash: ").append(toIndentedString(containerHash)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    gremlinClientVersion: ").append(toIndentedString(gremlinClientVersion)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    proxied: ").append(toIndentedString(proxied)).append("\n");
    sb.append("    instanceStartTime: ").append(toIndentedString(instanceStartTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    revokedBy: ").append(toIndentedString(revokedBy)).append("\n");
    sb.append("    revoked: ").append(toIndentedString(revoked)).append("\n");
    sb.append("    idle: ").append(toIndentedString(idle)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    lastSeen: ").append(toIndentedString(lastSeen)).append("\n");
    sb.append("    lastActiveEmitted: ").append(toIndentedString(lastActiveEmitted)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

