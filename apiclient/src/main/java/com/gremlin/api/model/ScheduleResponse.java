/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * ScheduleResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class ScheduleResponse {
  @SerializedName("orgId")
  private String orgId = null;

  @SerializedName("guid")
  private String guid = null;

  @SerializedName("trigger")
  private Map<String, Object> trigger = null;

  @SerializedName("target")
  private Map<String, Object> target = null;

  @SerializedName("command")
  private Map<String, Object> command = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("taskIds")
  private List<String> taskIds = null;

  @SerializedName("labels")
  private Map<String, String> labels = null;

  @SerializedName("multiSelectLabels")
  private Map<String, List<String>> multiSelectLabels = null;

  /**
   * Gets or Sets createSource
   */
  @JsonAdapter(CreateSourceEnum.Adapter.class)
  public enum CreateSourceEnum {
    WEBAPP("WebApp"),
    
    API("Api"),
    
    SCHEDULED("Scheduled"),
    
    MANUAL("Manual"),
    
    SPINNAKER("Spinnaker"),
    
    CONCORD("Concord"),
    
    GREMLINFEEDER("GremlinFeeder"),
    
    GREMLINSDKPYTHON("GremlinSdkPython"),
    
    SCENARIO("Scenario"),
    
    CHAO("Chao"),
    
    WEBSITE("Website");

    private String value;

    CreateSourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreateSourceEnum fromValue(String text) {
      for (CreateSourceEnum b : CreateSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CreateSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreateSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreateSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CreateSourceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("createSource")
  private CreateSourceEnum createSource = null;

  @SerializedName("callbacks")
  private List<CallBack> callbacks = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  public ScheduleResponse orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @ApiModelProperty(value = "")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public ScheduleResponse guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @ApiModelProperty(value = "")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public ScheduleResponse trigger(Map<String, Object> trigger) {
    this.trigger = trigger;
    return this;
  }

  public ScheduleResponse putTriggerItem(String key, Object triggerItem) {
    if (this.trigger == null) {
      this.trigger = new HashMap<String, Object>();
    }
    this.trigger.put(key, triggerItem);
    return this;
  }

   /**
   * Get trigger
   * @return trigger
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getTrigger() {
    return trigger;
  }

  public void setTrigger(Map<String, Object> trigger) {
    this.trigger = trigger;
  }

  public ScheduleResponse target(Map<String, Object> target) {
    this.target = target;
    return this;
  }

  public ScheduleResponse putTargetItem(String key, Object targetItem) {
    if (this.target == null) {
      this.target = new HashMap<String, Object>();
    }
    this.target.put(key, targetItem);
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getTarget() {
    return target;
  }

  public void setTarget(Map<String, Object> target) {
    this.target = target;
  }

  public ScheduleResponse command(Map<String, Object> command) {
    this.command = command;
    return this;
  }

  public ScheduleResponse putCommandItem(String key, Object commandItem) {
    if (this.command == null) {
      this.command = new HashMap<String, Object>();
    }
    this.command.put(key, commandItem);
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getCommand() {
    return command;
  }

  public void setCommand(Map<String, Object> command) {
    this.command = command;
  }

  public ScheduleResponse createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public ScheduleResponse taskIds(List<String> taskIds) {
    this.taskIds = taskIds;
    return this;
  }

  public ScheduleResponse addTaskIdsItem(String taskIdsItem) {
    if (this.taskIds == null) {
      this.taskIds = new ArrayList<String>();
    }
    this.taskIds.add(taskIdsItem);
    return this;
  }

   /**
   * Get taskIds
   * @return taskIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getTaskIds() {
    return taskIds;
  }

  public void setTaskIds(List<String> taskIds) {
    this.taskIds = taskIds;
  }

  public ScheduleResponse labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ScheduleResponse putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<String, String>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }

  public ScheduleResponse multiSelectLabels(Map<String, List<String>> multiSelectLabels) {
    this.multiSelectLabels = multiSelectLabels;
    return this;
  }

  public ScheduleResponse putMultiSelectLabelsItem(String key, List<String> multiSelectLabelsItem) {
    if (this.multiSelectLabels == null) {
      this.multiSelectLabels = new HashMap<String, List<String>>();
    }
    this.multiSelectLabels.put(key, multiSelectLabelsItem);
    return this;
  }

   /**
   * Get multiSelectLabels
   * @return multiSelectLabels
  **/
  @ApiModelProperty(value = "")
  public Map<String, List<String>> getMultiSelectLabels() {
    return multiSelectLabels;
  }

  public void setMultiSelectLabels(Map<String, List<String>> multiSelectLabels) {
    this.multiSelectLabels = multiSelectLabels;
  }

  public ScheduleResponse createSource(CreateSourceEnum createSource) {
    this.createSource = createSource;
    return this;
  }

   /**
   * Get createSource
   * @return createSource
  **/
  @ApiModelProperty(value = "")
  public CreateSourceEnum getCreateSource() {
    return createSource;
  }

  public void setCreateSource(CreateSourceEnum createSource) {
    this.createSource = createSource;
  }

  public ScheduleResponse callbacks(List<CallBack> callbacks) {
    this.callbacks = callbacks;
    return this;
  }

  public ScheduleResponse addCallbacksItem(CallBack callbacksItem) {
    if (this.callbacks == null) {
      this.callbacks = new ArrayList<CallBack>();
    }
    this.callbacks.add(callbacksItem);
    return this;
  }

   /**
   * Get callbacks
   * @return callbacks
  **/
  @ApiModelProperty(value = "")
  public List<CallBack> getCallbacks() {
    return callbacks;
  }

  public void setCallbacks(List<CallBack> callbacks) {
    this.callbacks = callbacks;
  }

  public ScheduleResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ScheduleResponse updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleResponse scheduleResponse = (ScheduleResponse) o;
    return Objects.equals(this.orgId, scheduleResponse.orgId) &&
        Objects.equals(this.guid, scheduleResponse.guid) &&
        Objects.equals(this.trigger, scheduleResponse.trigger) &&
        Objects.equals(this.target, scheduleResponse.target) &&
        Objects.equals(this.command, scheduleResponse.command) &&
        Objects.equals(this.createdBy, scheduleResponse.createdBy) &&
        Objects.equals(this.taskIds, scheduleResponse.taskIds) &&
        Objects.equals(this.labels, scheduleResponse.labels) &&
        Objects.equals(this.multiSelectLabels, scheduleResponse.multiSelectLabels) &&
        Objects.equals(this.createSource, scheduleResponse.createSource) &&
        Objects.equals(this.callbacks, scheduleResponse.callbacks) &&
        Objects.equals(this.createdAt, scheduleResponse.createdAt) &&
        Objects.equals(this.updatedAt, scheduleResponse.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orgId, guid, trigger, target, command, createdBy, taskIds, labels, multiSelectLabels, createSource, callbacks, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleResponse {\n");
    
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    taskIds: ").append(toIndentedString(taskIds)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    multiSelectLabels: ").append(toIndentedString(multiSelectLabels)).append("\n");
    sb.append("    createSource: ").append(toIndentedString(createSource)).append("\n");
    sb.append("    callbacks: ").append(toIndentedString(callbacks)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

