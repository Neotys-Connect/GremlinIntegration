/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * WebhookRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-22T16:18:53.536Z")



public class WebhookRequest {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("method")
  private String method = null;

  @SerializedName("headers")
  private Map<String, String> headers = null;

  @SerializedName("triggerEvents")
  private List<String> triggerEvents = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("payload")
  private String payload = null;

  public WebhookRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the webhook to be created/updated
   * @return name
  **/
  @ApiModelProperty(value = "The name of the webhook to be created/updated")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WebhookRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the webhook to be created/updated
   * @return description
  **/
  @ApiModelProperty(value = "The description of the webhook to be created/updated")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WebhookRequest uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The URI of the webhook
   * @return uri
  **/
  @ApiModelProperty(value = "The URI of the webhook")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public WebhookRequest method(String method) {
    this.method = method;
    return this;
  }

   /**
   * The HTTP request method to use when the webhook is invoked
   * @return method
  **/
  @ApiModelProperty(value = "The HTTP request method to use when the webhook is invoked")
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }

  public WebhookRequest headers(Map<String, String> headers) {
    this.headers = headers;
    return this;
  }

  public WebhookRequest putHeadersItem(String key, String headersItem) {
    if (this.headers == null) {
      this.headers = new HashMap<String, String>();
    }
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * Optional request headers to be used when the webhook is invoked
   * @return headers
  **/
  @ApiModelProperty(value = "Optional request headers to be used when the webhook is invoked")
  public Map<String, String> getHeaders() {
    return headers;
  }

  public void setHeaders(Map<String, String> headers) {
    this.headers = headers;
  }

  public WebhookRequest triggerEvents(List<String> triggerEvents) {
    this.triggerEvents = triggerEvents;
    return this;
  }

  public WebhookRequest addTriggerEventsItem(String triggerEventsItem) {
    if (this.triggerEvents == null) {
      this.triggerEvents = new ArrayList<String>();
    }
    this.triggerEvents.add(triggerEventsItem);
    return this;
  }

   /**
   * The list of attack events that should cause the webhook to be invoked
   * @return triggerEvents
  **/
  @ApiModelProperty(value = "The list of attack events that should cause the webhook to be invoked")
  public List<String> getTriggerEvents() {
    return triggerEvents;
  }

  public void setTriggerEvents(List<String> triggerEvents) {
    this.triggerEvents = triggerEvents;
  }

  public WebhookRequest state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State (active/deactivated) of the webhook
   * @return state
  **/
  @ApiModelProperty(value = "State (active/deactivated) of the webhook")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public WebhookRequest payload(String payload) {
    this.payload = payload;
    return this;
  }

   /**
   * The payload to be sent when the webhook is invoked
   * @return payload
  **/
  @ApiModelProperty(value = "The payload to be sent when the webhook is invoked")
  public String getPayload() {
    return payload;
  }

  public void setPayload(String payload) {
    this.payload = payload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookRequest webhookRequest = (WebhookRequest) o;
    return Objects.equals(this.name, webhookRequest.name) &&
        Objects.equals(this.description, webhookRequest.description) &&
        Objects.equals(this.uri, webhookRequest.uri) &&
        Objects.equals(this.method, webhookRequest.method) &&
        Objects.equals(this.headers, webhookRequest.headers) &&
        Objects.equals(this.triggerEvents, webhookRequest.triggerEvents) &&
        Objects.equals(this.state, webhookRequest.state) &&
        Objects.equals(this.payload, webhookRequest.payload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, uri, method, headers, triggerEvents, state, payload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    triggerEvents: ").append(toIndentedString(triggerEvents)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

