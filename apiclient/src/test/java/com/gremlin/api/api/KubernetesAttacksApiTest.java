/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.AttackResponse;
import com.gremlin.api.model.Attack;
import com.gremlin.api.model.HaltRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for KubernetesAttacksApi
 */
@Ignore
public class KubernetesAttacksApiTest {

    private final KubernetesAttacksApi api = new KubernetesAttacksApi();

    
    /**
     * Create an attack
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createAttackTest() throws ApiGremlinException {
        Object teamId = null;
        Attack body = null;
        api.createAttack(teamId, body);

        // TODO: test validations
    }
    
    /**
     * Get an attack by it&#39;s guid
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getAttackTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        AttackResponse response = api.getAttack(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * List all attacks.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getAttacksTest() throws ApiGremlinException {
        String source = null;
        Object teamId = null;
        List<AttackResponse> response = api.getAttacks(source, teamId);

        // TODO: test validations
    }
    
    /**
     * Halt all active attacks
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void haltAllAttacksTest() throws ApiGremlinException {
        HaltRequest body = null;
        Object teamId = null;
        api.haltAllAttacks(body, teamId);

        // TODO: test validations
    }
    
    /**
     * Halt an active attack
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void haltAttackTest() throws ApiGremlinException {
        String uid = null;
        HaltRequest body = null;
        Object teamId = null;
        api.haltAttack(uid, body, teamId);

        // TODO: test validations
    }
    
}
