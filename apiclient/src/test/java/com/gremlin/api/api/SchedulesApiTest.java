/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.Input;
import com.gremlin.api.model.UpdateScenarioScheduleRequest;
import com.gremlin.api.model.ScenarioScheduleInput;
import com.gremlin.api.model.ScenarioScheduleResponse;
import com.gremlin.api.model.ScheduleResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for SchedulesApi
 */
@Ignore
public class SchedulesApiTest {

    private final SchedulesApi api = new SchedulesApi();

    
    /**
     * Create an attack schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createAttackScheduleTest() throws ApiGremlinException {
        Object teamId = null;
        Input body = null;
        api.createAttackSchedule(teamId, body);

        // TODO: test validations
    }
    
    /**
     * This functionality has moved to POST /schedules/attacks.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createAttackScheduleLegacyTest() throws ApiGremlinException {
        Object teamId = null;
        Input body = null;
        api.createAttackScheduleLegacy(teamId, body);

        // TODO: test validations
    }
    
    /**
     * Create a scenario schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createScenarioScheduleTest() throws ApiGremlinException {
        Object teamId = null;
        ScenarioScheduleInput body = null;
        String response = api.createScenarioSchedule(teamId, body);

        // TODO: test validations
    }
    
    /**
     * Delete an attack schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void deleteAttackScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.deleteAttackSchedule(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * This functionality has moved to DELETE /schedules/attacks/{guid}
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void deleteAttackScheduleLegacyTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.deleteAttackScheduleLegacy(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Delete a scenario schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void deleteScenarioScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.deleteScenarioSchedule(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Disable a scenario schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void disableScenarioScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.disableScenarioSchedule(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Enable a scenario schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void enableScenarioScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.enableScenarioSchedule(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Get all active attack schedules.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getAttackSchedulesTest() throws ApiGremlinException {
        Object teamId = null;
        List<ScheduleResponse> response = api.getAttackSchedules(teamId);

        // TODO: test validations
    }
    
    /**
     * This functionality has moved to GET /schedules/attacks.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getAttackSchedulesLegacyTest() throws ApiGremlinException {
        Object teamId = null;
        List<ScheduleResponse> response = api.getAttackSchedulesLegacy(teamId);

        // TODO: test validations
    }
    
    /**
     * Get all scenario schedules.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getScenarioSchedules1Test() throws ApiGremlinException {
        Object teamId = null;
        List<ScenarioScheduleResponse> response = api.getScenarioSchedules1(teamId);

        // TODO: test validations
    }
    
    /**
     * Get an attack schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getSingleAttackScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        ScheduleResponse response = api.getSingleAttackSchedule(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * This functionality has moved to GET /schedules/attacks/{guid}.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getSingleAttackScheduleLegacyTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        ScheduleResponse response = api.getSingleAttackScheduleLegacy(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Get a scenario schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getSingleScenarioScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        ScenarioScheduleResponse response = api.getSingleScenarioSchedule(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Update a scenario schedule.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void updateScenarioScheduleTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        UpdateScenarioScheduleRequest body = null;
        String response = api.updateScenarioSchedule(guid, teamId, body);

        // TODO: test validations
    }
    
}
