/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.HaltRequest;
import com.gremlin.api.model.ScenarioInput;
import com.gremlin.api.model.ScenarioResponse;
import com.gremlin.api.model.ScenarioRunInput;
import com.gremlin.api.model.ScenarioRunResponse;
import com.gremlin.api.model.ScenarioRunResults;
import com.gremlin.api.model.ScenarioScheduleResponse;
import com.gremlin.api.model.SharedScenarioResponse;
import com.gremlin.api.model.UpdateScenarioInput;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for ScenariosApi
 */
@Ignore
public class ScenariosApiTest {

    private final ScenariosApi api = new ScenariosApi();

    
    /**
     * Archive a scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void archiveTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.archive(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Create a new scenario.
     *
     * Please note that if the &#x60;labels&#x60; or &#x60;tags&#x60; fields are not provided, no filtering will be employed and a scenario will target all active clients within your team.  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createNewScenarioTest() throws ApiGremlinException {
        Object teamId = null;
        ScenarioInput body = null;
        String response = api.createNewScenario(teamId, body);

        // TODO: test validations
    }
    
    /**
     * Create new shared scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_SCENARIO&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createNewSharedScenarioTest() throws ApiGremlinException {
        Object teamId = null;
        List<Object> body = null;
        api.createNewSharedScenario(teamId, body);

        // TODO: test validations
    }
    
    /**
     * List all active scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getActive1Test() throws ApiGremlinException {
        Object teamId = null;
        List<ScenarioResponse> response = api.getActive1(teamId);

        // TODO: test validations
    }
    
    /**
     * List all scenario runs for your team.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getAllRunsForTeamTest() throws ApiGremlinException {
        String state = null;
        String includeArchived = null;
        String startDate = null;
        String endDate = null;
        Object teamId = null;
        List<ScenarioRunResponse> response = api.getAllRunsForTeam(state, includeArchived, startDate, endDate, teamId);

        // TODO: test validations
    }
    
    /**
     * List all archived scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getArchivedTest() throws ApiGremlinException {
        Object teamId = null;
        List<ScenarioResponse> response = api.getArchived(teamId);

        // TODO: test validations
    }
    
    /**
     * List all draft scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getDraftsTest() throws ApiGremlinException {
        Object teamId = null;
        List<ScenarioResponse> response = api.getDrafts(teamId);

        // TODO: test validations
    }
    
    /**
     * List all runnable scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getRunnableTest() throws ApiGremlinException {
        Object teamId = null;
        List<ScenarioResponse> response = api.getRunnable(teamId);

        // TODO: test validations
    }
    
    /**
     * List all runs for a scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getRunsTest() throws ApiGremlinException {
        String guid = null;
        String startDate = null;
        String endDate = null;
        Object teamId = null;
        List<ScenarioRunResponse> response = api.getRuns(guid, startDate, endDate, teamId);

        // TODO: test validations
    }
    
    /**
     * Get details about a scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getScenarioTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        ScenarioResponse response = api.getScenario(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Get details about a scenario run.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getScenarioRunTest() throws ApiGremlinException {
        String guid = null;
        Long runNumber = null;
        Object teamId = null;
        ScenarioRunResponse response = api.getScenarioRun(guid, runNumber, teamId);

        // TODO: test validations
    }
    
    /**
     * Get all schedules for a scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getScenarioSchedulesTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        List<ScenarioScheduleResponse> response = api.getScenarioSchedules(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Get details on a shared scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getSharedScenarioTest() throws ApiGremlinException {
        String guid = null;
        SharedScenarioResponse response = api.getSharedScenario(guid);

        // TODO: test validations
    }
    
    /**
     * Get all company shared scenarios.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getSharedScenariosForCompanyTest() throws ApiGremlinException {
        List<SharedScenarioResponse> response = api.getSharedScenariosForCompany();

        // TODO: test validations
    }
    
    /**
     * Idempotently halt the specified scenario run.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void haltAsPostTest() throws ApiGremlinException {
        String guid = null;
        Long runNumber = null;
        HaltRequest body = null;
        Object teamId = null;
        api.haltAsPost(guid, runNumber, body, teamId);

        // TODO: test validations
    }
    
    /**
     * Restore an archived scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void restoreTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        api.restore(guid, teamId);

        // TODO: test validations
    }
    
    /**
     * Run a scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void runScenarioTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        ScenarioRunInput body = null;
        String response = api.runScenario(guid, teamId, body);

        // TODO: test validations
    }
    
    /**
     * This functionality has been replaced by PUT /{guid}/runs/{runNumber}/results.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void setScenarioRunResultFlagsTest() throws ApiGremlinException {
        String guid = null;
        Long runNumber = null;
        Object teamId = null;
        Object body = null;
        api.setScenarioRunResultFlags(guid, runNumber, teamId, body);

        // TODO: test validations
    }
    
    /**
     * Update the result notes of a scenario run.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void setScenarioRunResultNotesTest() throws ApiGremlinException {
        String guid = null;
        Long runNumber = null;
        String body = null;
        Object teamId = null;
        api.setScenarioRunResultNotes(guid, runNumber, body, teamId);

        // TODO: test validations
    }
    
    /**
     * Update the results of a scenario run.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void setScenarioRunResultsTest() throws ApiGremlinException {
        String guid = null;
        Long runNumber = null;
        Object teamId = null;
        ScenarioRunResults body = null;
        api.setScenarioRunResults(guid, runNumber, teamId, body);

        // TODO: test validations
    }
    
    /**
     * Unshare a company shared scenario.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;UNSHARE_SCENARIO&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void unshareScenarioTest() throws ApiGremlinException {
        String guid = null;
        api.unshareScenario(guid);

        // TODO: test validations
    }
    
    /**
     * Update a scenario
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void updateScenarioTest() throws ApiGremlinException {
        String guid = null;
        Object teamId = null;
        UpdateScenarioInput body = null;
        api.updateScenario(guid, teamId, body);

        // TODO: test validations
    }
    
}
