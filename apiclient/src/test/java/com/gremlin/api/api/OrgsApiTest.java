/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.Org;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for OrgsApi
 */
@Ignore
public class OrgsApiTest {

    private final OrgsApi api = new OrgsApi();

    
    /**
     * Rolls over to use a new certificate.  The current certificate will be saved and still valid for authentication, providing a transition period.
     *
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;MANAGE_TEAM_CREDENTIALS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void addNewCertificateTest() throws ApiGremlinException {
        Object teamId = null;
        api.addNewCertificate(teamId);

        // TODO: test validations
    }
    
    /**
     * Creates a new org with provided name.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;CREATE_REMOVE_TEAM&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void create2Test() throws ApiGremlinException {
        String name = null;
        Boolean addUser = null;
        api.create2(name, addUser);

        // TODO: test validations
    }
    
    /**
     * Get the specified Org.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void infoTest() throws ApiGremlinException {
        String identifier = null;
        Boolean prefs = null;
        Org response = api.info(identifier, prefs);

        // TODO: test validations
    }
    
    /**
     * Get all Orgs.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void info1Test() throws ApiGremlinException {
        Boolean prefs = null;
        List<Org> response = api.info1(prefs);

        // TODO: test validations
    }
    
    /**
     * Deletes the old certificate for this org.  This is intended for when a transition to new certificates has been completed, or when the old certificate has been compromised.
     *
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;MANAGE_TEAM_CREDENTIALS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void invalidateOldCertificateTest() throws ApiGremlinException {
        Object teamId = null;
        api.invalidateOldCertificate(teamId);

        // TODO: test validations
    }
    
    /**
     * Deletes the current credentials and generates new.  For use when the current credentials are compromised.
     *
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;MANAGE_TEAM_CREDENTIALS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void replaceCertificateTest() throws ApiGremlinException {
        Object teamId = null;
        api.replaceCertificate(teamId);

        // TODO: test validations
    }
    
    /**
     * Resets the secret for this Org.
     *
     * SUPER users only  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;MANAGE_TEAM_CREDENTIALS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void secretResetTest() throws ApiGremlinException {
        String identifier = null;
        Object teamId = null;
        api.secretReset(identifier, teamId);

        // TODO: test validations
    }
    
}
