/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.ApiKeyJson;
import com.gremlin.api.model.CreateApiKeysRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for ApikeysApi
 */
@Ignore
public class ApikeysApiTest {

    private final ApikeysApi api = new ApikeysApi();

    
    /**
     * Un-Revoke an existing API Key
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ACTIVATE_API_KEY&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void activate1Test() throws ApiGremlinException {
        String identifier = null;
        Object teamId = null;
        api.activate1(identifier, teamId);

        // TODO: test validations
    }
    
    /**
     * Create a new API Key
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void createNewTest() throws ApiGremlinException {
        CreateApiKeysRequest body = null;
        Object teamId = null;
        api.createNew(body, teamId);

        // TODO: test validations
    }
    
    /**
     * List active API Keys
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void listActiveTest() throws ApiGremlinException {
        Object teamId = null;
        List<ApiKeyJson> response = api.listActive(teamId);

        // TODO: test validations
    }
    
    /**
     * List all API Keys
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiGremlinException {
        Object teamId = null;
        List<ApiKeyJson> response = api.listAll(teamId);

        // TODO: test validations
    }
    
    /**
     * Revoke an existing API Key
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;TEAM_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void revoke1Test() throws ApiGremlinException {
        String identifier = null;
        Object teamId = null;
        api.revoke1(identifier, teamId);

        // TODO: test validations
    }
    
}
