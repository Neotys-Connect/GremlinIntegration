/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.TeamUserInfo;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    
    /**
     * Get all active users.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;READ_TEAM_USERS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void active3Test() throws ApiGremlinException {
        Object teamId = null;
        List<TeamUserInfo> response = api.active3(teamId);

        // TODO: test validations
    }
    
    /**
     * Add an existing user to the target team
     *
     * User must belong to this teams company  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ADD_REMOVE_USER_FROM_TEAM&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void addUserToTeamTest() throws ApiGremlinException {
        String body = null;
        Object teamId = null;
        api.addUserToTeam(body, teamId);

        // TODO: test validations
    }
    
    /**
     * Get all users.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;READ_TEAM_USERS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void all3Test() throws ApiGremlinException {
        Object teamId = null;
        List<TeamUserInfo> response = api.all3(teamId);

        // TODO: test validations
    }
    
    /**
     * Renew authorization.
     *
     * 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void authRenewTest() throws ApiGremlinException {
        String email = null;
        String orgId = null;
        String renewToken = null;
        api.authRenew(email, orgId, renewToken);

        // TODO: test validations
    }
    
    /**
     * Get information about the authenticated user
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void getSelfTest() throws ApiGremlinException {
        api.getSelf();

        // TODO: test validations
    }
    
    /**
     * Invite a user.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ADD_USER_TO_COMPANY&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void inviteTest() throws ApiGremlinException {
        String email = null;
        String sourceDetail = null;
        api.invite(email, sourceDetail);

        // TODO: test validations
    }
    
    /**
     * Renew authorization.
     *
     * 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void rbacAuthRenewTest() throws ApiGremlinException {
        String email = null;
        String companyId = null;
        String teamId = null;
        String renewToken = null;
        api.rbacAuthRenew(email, companyId, teamId, renewToken);

        // TODO: test validations
    }
    
    /**
     * Update an existing users info.
     *
     * User must exist.  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void rbacUpdateSelfTest() throws ApiGremlinException {
        String body = null;
        api.rbacUpdateSelf(body);

        // TODO: test validations
    }
    
    /**
     * Returns the updated user sessions list for the currently authenticated user.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void refreshSessionsTest() throws ApiGremlinException {
        Boolean getCompanySession = null;
        api.refreshSessions(getCompanySession);

        // TODO: test validations
    }
    
    /**
     * Revoke a pending user invite.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;DEACTIVATE_USER&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void revokeInviteTest() throws ApiGremlinException {
        String email = null;
        api.revokeInvite(email);

        // TODO: test validations
    }
    
    /**
     * Deactivate a user.
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;ADD_REMOVE_USER_FROM_TEAM&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void revokeOrRemoveFromTeamTest() throws ApiGremlinException {
        String email = null;
        Object teamId = null;
        api.revokeOrRemoveFromTeam(email, teamId);

        // TODO: test validations
    }
    
    /**
     * Update an existing user.
     *
     * User must exist.  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;MANAGE_TEAM_USER_PERMISSIONS&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiGremlinException {
        String email = null;
        List<String> role = null;
        Object teamId = null;
        api.update(email, role, teamId);

        // TODO: test validations
    }
    
}
