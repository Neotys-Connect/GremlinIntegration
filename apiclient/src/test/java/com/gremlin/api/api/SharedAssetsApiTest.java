/*
 * The Gremlin API
 * The API for interacting with Gremlin's 'Failure as a Service'
 *
 * OpenAPI spec version: v1
 * Contact: support@gremlin.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gremlin.api.api;

import com.gremlin.api.ApiGremlinException;
import com.gremlin.api.model.NewRequestRequest;
import com.gremlin.api.model.OutstandingRequests;
import com.gremlin.api.model.SharableAssets;
import com.gremlin.api.model.SharedAsset;
import com.gremlin.api.model.SharedAssetUpdate;
import com.gremlin.api.model.UpdateAllRequests;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for SharedAssetsApi
 */
@Ignore
public class SharedAssetsApiTest {

    private final SharedAssetsApi api = new SharedAssetsApi();

    
    /**
     * Approves a sharing request to a resource you own
     *
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void approveAccessTest() throws ApiGremlinException {
        String requestId = null;
        Object teamId = null;
        SharedAsset response = api.approveAccess(requestId, teamId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void approveAccessRequestsTest() throws ApiGremlinException {
        UpdateAllRequests body = null;
        Object teamId = null;
        SharedAssetUpdate response = api.approveAccessRequests(body, teamId);

        // TODO: test validations
    }
    
    /**
     * Deletes an existing request for Access
     *
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void deleteRequestTest() throws ApiGremlinException {
        String requestId = null;
        SharedAsset response = api.deleteRequest(requestId);

        // TODO: test validations
    }
    
    /**
     * Denies or Revokes a sharing request to a resource you own
     *
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void denyAccessTest() throws ApiGremlinException {
        String requestId = null;
        Object teamId = null;
        SharedAsset response = api.denyAccess(requestId, teamId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;SHARE_ASSET&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void denyAccessRequestsTest() throws ApiGremlinException {
        UpdateAllRequests body = null;
        Object teamId = null;
        SharedAssetUpdate response = api.denyAccessRequests(body, teamId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void listAssetsSharedWithMeTest() throws ApiGremlinException {
        SharedAssetUpdate response = api.listAssetsSharedWithMe();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void listAvailableAssetsTest() throws ApiGremlinException {
        String assetId = null;
        SharableAssets response = api.listAvailableAssets(assetId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void listMyRequestsTest() throws ApiGremlinException {
        OutstandingRequests response = api.listMyRequests();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void listRequestsToMeTest() throws ApiGremlinException {
        String assetId = null;
        OutstandingRequests response = api.listRequestsToMe(assetId);

        // TODO: test validations
    }
    
    /**
     * Deletes an existing request for Access
     *
     * The {requestId} parameter _must_ be urlencoded  # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void postDeleteRequestTest() throws ApiGremlinException {
        String requestId = null;
        SharedAsset response = api.postDeleteRequest(requestId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void requestAccessTest() throws ApiGremlinException {
        NewRequestRequest body = null;
        SharedAssetUpdate response = api.requestAccess(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * # Authorization Schema ## [__Bearer Tokens__](https://www.gremlin.com/docs/api-reference/examples/#authentication-and-access-tokens) ### Role Based Access Control [&#x60;COMPANY_DEFAULT&#x60;](https://www.gremlin.com/docs/user-management/access-control/#privileges) 
     *
     * @throws ApiGremlinException
     *          if the Api call fails
     */
    @Test
    public void requestAccessToAssetTest() throws ApiGremlinException {
        String owningTeam = null;
        String assetId = null;
        String namespace = null;
        SharedAsset response = api.requestAccessToAsset(owningTeam, assetId, namespace);

        // TODO: test validations
    }
    
}
